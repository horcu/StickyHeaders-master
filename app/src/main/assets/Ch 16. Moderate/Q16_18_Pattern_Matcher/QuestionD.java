{"Id":"d803e4ac-950c-49ea-b14f-a59ccef146b2","Topic":"QuestionD.java","Question":"","Solution":"package Q16_18_Pattern_Matcher;\n\npublic class QuestionD {\n\tpublic static boolean doesMatch(String pattern, String value) {\n\t\tif (pattern.length() == 0) return value.length() == 0;\n\t\t\n\t\tchar mainChar = pattern.charAt(0);\n\t\tchar altChar = mainChar == 'a' ? 'b' : 'a';\n\t\tint size = value.length();\n\n\t\tint countOfMain = countOf(pattern, mainChar);\n\t\tint countOfAlt = pattern.length() - countOfMain;\n\t\tint firstAlt = pattern.indexOf(altChar);\n\t\tint maxMainSize = size / countOfMain;\n\t\t\n\t\tfor (int mainSize = 0; mainSize <= maxMainSize; mainSize++) {\n\t\t\tint remainingLength = size - mainSize * countOfMain;\n\t\t\tif (countOfAlt == 0 || remainingLength % countOfAlt == 0) {\n\t\t\t\tint altIndex = firstAlt * mainSize;\n\t\t\t\tint altSize = countOfAlt == 0 ? 0 : remainingLength / countOfAlt;\n\t\t\t\tif (matches(pattern, value, mainSize, altSize, altIndex)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\t\n\t\n\tpublic static boolean matches(String pattern, String value, int mainSize, int altSize, int firstAlt) {\n\t\tint stringIndex = mainSize;\n\t\tfor (int i = 1; i < pattern.length(); i++) {\n\t\t\tint size = pattern.charAt(i) == pattern.charAt(0) ? mainSize : altSize;\n\t\t\tint offset = pattern.charAt(i) == pattern.charAt(0) ? 0 : firstAlt;\n\t\t\tif (!isEqual(value, offset, stringIndex, size)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tstringIndex += size;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tpublic static boolean isEqual(String s1, int offset1, int offset2, int size) {\n\t\tfor (int i = 0; i < size; i++) {\n\t\t\tif (s1.charAt(offset1 + i) != s1.charAt(offset2 + i)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tpublic static int countOf(String pattern, char c) {\n\t\tint count = 0;\n\t\tfor (int i = 0; i < pattern.length(); i++) {\n\t\t\tif (pattern.charAt(i) == c) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n \t\n\t\n\t\n\tpublic static void main(String[] args) {\n\t\tString[][] tests = {{\"ababb\", \"backbatbackbatbat\"}, {\"abab\", \"backsbatbackbats\"}, {\"aba\", \"backsbatbacksbat\"}};\n\t\tfor (String[] test : tests) {\n\t\t\tString pattern = test[0];\n\t\t\tString value = test[1];\n\t\t\tSystem.out.println(pattern + \", \" + value + \": \" + doesMatch(pattern, value));\n\t\t}\n\n\t}\n\n}\n","Chapter":"Q16_18_Pattern_Matcher"}