{"Id":"5d9ae5fd-aa11-4017-a32c-ed1d12051bf9","Topic":"Question.java","Question":"","Solution":"package Q16_07_Number_Max;\r\n\r\npublic class Question {\r\n\t/* Flips a 1 to a 0 and a 0 to a 1 */\r\n\tpublic static int flip(int bit) {\r\n\t\treturn 1 ^ bit;\r\n\t}\t\r\n\t\r\n\t/* Returns 1 if a is positive, and 0 if a is negative */\r\n\tpublic static int sign(int a) {\r\n\t\treturn flip((a >> 31) & 0x1);\r\n\t}\r\n\t\r\n\tpublic static int getMaxNaive(int a, int b) {\r\n\t\tint k = sign(a - b);\r\n\t\tint q = flip(k);\r\n\t\treturn a * k + b * q;\r\n\t}\r\n\t\r\n\tpublic static int getMax(int a, int b) {\r\n\t\tint c = a - b;\r\n\t\t\r\n\t\tint sa = sign(a); // if a >= 0, then 1 else 0\r\n\t\tint sb = sign(b); // if b >= 0, then 1 else 0\r\n\t\tint sc = sign(c); // depends on whether or not a - b overflows\r\n\t\t\r\n\t\t/* We want to define a value k which is 1 if a > b and 0 if a < b. \r\n\t\t * (if a = b, it doesn't matter what value k is) */\r\n\t\t\r\n\t\tint use_sign_of_a = sa ^ sb; // If a and b have different signs, then k = sign(a)\r\n\t\tint use_sign_of_c = flip(sa ^ sb); // If a and b have the same sign, then k = sign(a - b)\r\n\t\t\r\n\t\t/* We can't use a comparison operator, but we can multiply values by 1 or 0 */\r\n\t\tint k = use_sign_of_a * sa + use_sign_of_c * sc;\r\n\t\tint q = flip(k); // opposite of k\r\n\t\t\r\n\t\treturn a * k + b * q;\r\n\t}\t\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tint a = 26;\r\n\t\tint b = -15;\r\n\t\t\r\n\t\tSystem.out.println(\"max_naive(\" + a + \", \" + b + \") = \" + getMaxNaive(a, b));\r\n\t\tSystem.out.println(\"max(\" + a + \", \" + b + \") = \" + getMax(a, b));\t\t\r\n\t\t\r\n\t\ta = -15;\r\n\t\tb = 2147483647;\r\n\t\t\r\n\t\tSystem.out.println(\"max_naive(\" + a + \", \" + b + \") = \" + getMaxNaive(a, b));\r\n\t\tSystem.out.println(\"max(\" + a + \", \" + b + \") = \" + getMax(a, b));\r\n\t}\r\n\r\n}\r\n","Chapter":"Q16_07_Number_Max"}