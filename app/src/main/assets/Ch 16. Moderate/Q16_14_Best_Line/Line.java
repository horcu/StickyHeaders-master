{"Id":"681548f2-3ea2-46e4-b169-c5560fd67d2b","Topic":"Line.java","Question":"","Solution":"package Q16_14_Best_Line;\r\n\r\npublic class Line {\r\n\tpublic static double epsilon = .5;\r\n\tpublic double slope;\r\n\tpublic double intercept;\r\n\t\r\n\tprivate boolean infinite_slope = false;\r\n\t\r\n\tpublic Line(GraphPoint p, GraphPoint q) {\r\n\t\tif (Math.abs(p.x - q.x) > epsilon) { // if xï¿½s are different\r\n\t\t\tslope = (p.y - q.y) / (p.x - q.x); // compute slope\r\n\t\t\tintercept = p.y - slope * p.x; // y intercept from y=mx+b\r\n\t\t} else {\r\n\t\t\tinfinite_slope = true;\r\n\t\t\tintercept = p.x; // x-intercept, since slope is infinite\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic boolean isEquivalent(double a, double b) {\r\n\t\treturn (Math.abs(a - b) < epsilon);\r\n\t}\r\n\t\r\n\tpublic void Print() {\r\n\t\tSystem.out.println(\"y = \" + slope + \"x + \" + intercept);\r\n\t}\r\n\t\t\r\n\tpublic static double floorToNearestEpsilon(double d) {\r\n\t\tint r = (int) (d / epsilon);\r\n\t\treturn ((double) r) * epsilon;\r\n\t}\r\n    \r\n\tpublic boolean isEquivalent(Object o) {  \r\n\t\tLine l = (Line) o;\r\n    \tif (isEquivalent(l.slope, slope) && isEquivalent(l.intercept, intercept) && (infinite_slope == l.infinite_slope)) {\r\n    \t\treturn true;\r\n    \t}\r\n        return false;\r\n    }      \r\n}\r\n","Chapter":"Q16_14_Best_Line"}