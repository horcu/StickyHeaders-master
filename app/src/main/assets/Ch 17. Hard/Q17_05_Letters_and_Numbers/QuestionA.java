{"Id":"4a70a159-25c8-4ee6-b71f-aef2dd2f9f04","Topic":"QuestionA.java","Question":"","Solution":"package Q17_05_Letters_and_Numbers;\n\npublic class QuestionA {\n\tpublic static char[] extractSubarray(char[] array, int start, int end) {\n\t\tif (start > end) return null;\t\t\n\t\tchar[] subarray = new char[end - start + 1];\n\t\tfor (int i = start; i <= end; i++) {\n\t\t\tsubarray[i - start] = array[i];\n\t\t}\n\t\treturn subarray;\n\t}\n\t\n\tpublic static boolean hasEqualLettersNumbers(char[] array, int start, int end) {\n\t\tint counter = 0;\n\t\tfor (int i = start; i <= end; i++) {\n\t\t\tif (Character.isLetter(array[i])) {\n\t\t\t\tcounter++;\n\t\t\t} else if (Character.isDigit(array[i])) {\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t}\n\t\treturn counter == 0;\n\t}\n\t\n\tpublic static char[] findLongestSubarray(char[] array) {\n\t\tfor (int len = array.length; len > 1; len--) {\n\t\t\tfor (int i = 0; i <= array.length - len; i++) {\n\t\t\t\tif (hasEqualLettersNumbers(array, i, i + len - 1)) {\n\t\t\t\t\treturn extractSubarray(array, i, i + len - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t\treturn null;\t\n\t}\t\n\t\n\tpublic static void main(String[] args) {\n\t\tchar b = '1';\n\t\tchar a = 'a';\n\t\tchar[] array = {a, b, a, b, a, b, b, b, b, b, a, a, a, a, a, b, a, b, a, b, b, a, a, a, a, a, a, a};\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tSystem.out.print(array[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t\tchar[] max = findLongestSubarray(array);\n\t\tSystem.out.println(max.length);\n\t\tfor (int i = 0; i < max.length; i++) {\n\t\t\tSystem.out.print(max[i] + \" \");\n\t\t}\n\t\tSystem.out.println(\"\\nIs Valid? \" + hasEqualLettersNumbers(max, 0, max.length - 1));\n\t}\n\n}\n","Chapter":"Q17_05_Letters_and_Numbers"}