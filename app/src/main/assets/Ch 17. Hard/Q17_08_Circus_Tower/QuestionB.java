{"Id":"62b8f390-072d-4e68-878f-87abe0a87851","Topic":"QuestionB.java","Question":"","Solution":"package Q17_08_Circus_Tower;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.*;\r\n\r\npublic class QuestionB {\r\n\r\n\t// Returns longer sequence\r\n\tprivate static ArrayList<HtWt> max(ArrayList<HtWt> seq1, ArrayList<HtWt> seq2) {\r\n\t\tif (seq1 == null) {\r\n\t\t\treturn seq2;\r\n\t\t} else if (seq2 == null) {\r\n\t\t\treturn seq1;\r\n\t\t}\r\n\t\treturn seq1.size() > seq2.size() ? seq1 : seq2;\r\n\t}\r\n\t\r\n\tprivate static boolean canAppend(ArrayList<HtWt> solution, HtWt value) {\r\n\t\tif (solution == null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (solution.size() == 0) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tHtWt last = solution.get(solution.size() - 1);\r\n\t\treturn last.isBefore(value);\r\n\t}\r\n\t\r\n\tpublic static ArrayList<HtWt> longestIncreasingSeq(ArrayList<HtWt> array) {\r\n\t\tCollections.sort(array);\r\n\t\t\r\n\t\tArrayList<ArrayList<HtWt>> solutions = new ArrayList<ArrayList<HtWt>>();\r\n\t\tArrayList<HtWt> bestSequence = null;\r\n\t\tfor (int i = 0; i < array.size(); i++) {\r\n\t\t\tArrayList<HtWt> longestAtIndex = bestSeqAtIndex(array, solutions, i);\r\n\t\t\tsolutions.add(i, longestAtIndex);\r\n\t\t\tbestSequence = max(bestSequence, longestAtIndex);\r\n\t\t}\r\n\t\t\r\n\t\treturn bestSequence;\r\n\t}\r\n\t\r\n\tprivate static ArrayList<HtWt> bestSeqAtIndex(ArrayList<HtWt> array, ArrayList<ArrayList<HtWt>> solutions, int index) {\r\n\t\tHtWt value = array.get(index);\r\n\t\t\r\n\t\tArrayList<HtWt> bestSequence = new ArrayList<HtWt>();\r\n\t\t\r\n\t\tfor (int i = 0; i < index; i++) {\r\n\t\t\tArrayList<HtWt> solution = solutions.get(i);\r\n\t\t\tif (canAppend(solution, value)) {\r\n\t\t\t\tbestSequence = max(solution, bestSequence);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tArrayList<HtWt> best = (ArrayList<HtWt>) bestSequence.clone();\r\n\t\tbest.add(value);\r\n\t\t\r\n\t\treturn best;\r\n\t}\r\n\t\r\n\tpublic static ArrayList<HtWt> initialize() {\r\n\t\tArrayList<HtWt> items = new ArrayList<HtWt>();\r\n\t\t\r\n\t\tHtWt item = new HtWt(65, 60);\r\n\t\titems.add(item);\r\n\t\t\r\n\t\titem = new HtWt(70, 150);\r\n\t\titems.add(item);\r\n\t\t\r\n\t\titem = new HtWt(56, 90);\r\n\t\titems.add(item);\r\n\t\t\r\n\t\titem = new HtWt(75, 190);\r\n\t\titems.add(item);\r\n\t\t\r\n\t\titem = new HtWt(60, 95);\r\n\t\titems.add(item);\r\n\t\t\r\n\t\titem = new HtWt(68, 110);\r\n\t\titems.add(item);\r\n\t\t\r\n\t\titem = new HtWt(35, 65);\r\n\t\titems.add(item);\r\n\t\t\r\n\t\titem = new HtWt(40, 60);\r\n\t\titems.add(item);\r\n\t\t\r\n\t\titem = new HtWt(45, 63);\r\n\t\titems.add(item);\r\n\t\t\r\n\t\treturn items;\r\n\t}\r\n\t\r\n\tpublic static void printList(ArrayList<HtWt> list) {\r\n\t\tfor (HtWt item : list) {\r\n\t\t\tSystem.out.println(item.toString() + \" \");\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tArrayList<HtWt> items = initialize();\r\n\t\tArrayList<HtWt> solution = longestIncreasingSeq(items);\r\n\t\tprintList(solution);\r\n\t}\r\n\r\n}\r\n","Chapter":"Q17_08_Circus_Tower"}