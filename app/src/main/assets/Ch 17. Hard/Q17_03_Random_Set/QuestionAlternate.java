{"Id":"cf84de7c-8d20-4e7f-a78e-2eb827a61633","Topic":"QuestionAlternate.java","Question":"","Solution":"package Q17_03_Random_Set;\n\nimport CtCILibrary.AssortedMethods;\n\npublic class QuestionAlternate {\n\n\t/* Random number between lower and higher, inclusive */\n\tpublic static int rand(int lower, int higher) { \n\t\treturn lower + (int)(Math.random() * (higher - lower + 1));\n\t}\n\t\n\t/* pick M elements from original array, using only elements 0 through i (inclusive).*/\n\tpublic static int[] pickMRecursively(int[] original, int m, int i) {\n\t\tif (i + 1 < m) { // Not enough elements\n\t\t\treturn null; \n\t\t} else if (i + 1 == m) { // Base case -- copy first m elements into array\n\t\t\tint[] set = new int[m];\n\t\t\tfor (int k = 0; k < m; k++) {\n\t\t\t\tset[k] = original[k];\n\t\t\t}\n\t\t\treturn set;\n\t\t} else {\n\t\t\tint[] set = pickMRecursively(original, m, i - 1);\n\t\t\tint k = rand(0, i);\n\t\t\tif (k < m) {\n\t\t\t\tset[k] = original[i];\n\t\t\t}\n\t\t\treturn set;\n\t\t}\n\t}\t\n\n\t/* pick M elements from original array.*/\n\tpublic static int[] pickMIteratively(int[] original, int m) {\n\t\tint[] subset = new int[m];\n\t\t\n\t\t/* Fill in subset array with first part of original array */\n\t\tfor (int i = 0; i < m ; i++) {\n\t\t\tsubset[i] = original[i];\n\t\t}\n\t\t\n\t\t/* Go through rest of original array. */\n\t\tfor (int i = m; i < original.length; i++) {\n\t\t\tint k = rand(0, i);\n\t\t\tif (k < m) {\n\t\t\t\tsubset[k] = original[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn subset;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tint[] cards = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};\n\t\tSystem.out.println(AssortedMethods.arrayToString(cards));\n\t\tint[] set = pickMIteratively(cards, 4);\n\t\tSystem.out.println(AssortedMethods.arrayToString(set));\n\t}\t\n\n}\n","Chapter":"Q17_03_Random_Set"}