{"Id":"2fc3a9c5-abfd-4d9d-a34b-aebbf8ce153d","Topic":"QuestionA.java","Question":"","Solution":"package Q17_16_The_Masseuse;\n\npublic class QuestionA {\n\tpublic static int maxMinutes(int[] massages) {\n\t\treturn maxMinutes(massages, 0);\n\t}\n\t\n\tpublic static int maxMinutes(int[] massages, int index) {\n\t\tif (index >= massages.length) { // Out of bounds\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t\t/* Best with this reservation. */\n\t\tint bestWith = massages[index] + maxMinutes(massages, index + 2);\n\t\t\n\t\t/* Best without this reservation. */\n\t\tint bestWithout = maxMinutes(massages, index + 1);\n\t\t\n\t\t/* Return best of this subarray, starting from index. */\n\t\treturn Math.max(bestWith, bestWithout);\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tint[] massages = {30, 15, 60, 75, 45, 15, 15, 45};\n\t\tSystem.out.println(maxMinutes(massages));\n\t}\n\n}\n","Chapter":"Q17_16_The_Masseuse"}