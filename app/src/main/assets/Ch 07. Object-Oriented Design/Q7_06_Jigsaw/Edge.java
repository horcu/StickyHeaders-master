{"Id":"f3eb425b-e571-48d6-8222-6d703ef1279d","Topic":"Edge.java","Question":"","Solution":"package Q7_06_Jigsaw;\n\npublic class Edge {\t\n\tprivate Shape shape;\n\tprivate String code; // used to mock how pieces would fit together.\n\tprivate Piece parentPiece;\n\t\n\tpublic Edge(Shape shape, String code) {\n\t\tthis.shape = shape;\n\t\tthis.code = code;\n\t}\n\t\n\tprivate String getCode() {\n\t\treturn code;\n\t}\n\t\n\tpublic Edge _createMatchingEdge() {\n\t\tif (shape == Shape.FLAT) return null;\n\t\treturn new Edge(shape.getOpposite(), getCode());\n\t}\n\n\t/* Check if this edge fits into the other one. */\n\tpublic boolean fitsWith(Edge edge) { \n\t\treturn edge.getCode().equals(getCode());\n\t}\n\t\n\t/* Set parent piece. */\n\tpublic void setParentPiece(Piece parentPiece) {\n\t\tthis.parentPiece = parentPiece;\n\t}\n\t\n\t/* Get the parent piece. */\n\tpublic Piece getParentPiece() {\n\t\treturn parentPiece;\n\t}\n\t\n\t/* Return the shape of the edge. */\n\tpublic Shape getShape() {\n\t\treturn shape;\n\t}\n\t\n\tpublic String toString() {\n\t\treturn code;\n\t}\n}\n","Chapter":"Q7_06_Jigsaw"}