{"Id":"35091f72-db26-4a7a-9418-60e7ec68aa0a","Topic":"BlackJackHand.java","Question":"","Solution":"package Q7_01_Deck_of_Cards;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class BlackJackHand extends Hand<BlackJackCard> {\r\n\tpublic BlackJackHand() {\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic int score() {\r\n\t\tArrayList<Integer> scores = possibleScores();\r\n\t\tint maxUnder = Integer.MIN_VALUE;\r\n\t\tint minOver = Integer.MAX_VALUE;\r\n\t\tfor (int score : scores) {\r\n\t\t\tif (score > 21 && score < minOver) {\r\n\t\t\t\tminOver = score;\r\n\t\t\t} else if (score <= 21 && score > maxUnder) {\r\n\t\t\t\tmaxUnder = score;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn maxUnder == Integer.MIN_VALUE ? minOver : maxUnder;\r\n\t}\r\n\t\r\n\tprivate ArrayList<Integer> possibleScores() {\r\n\t\tArrayList<Integer> scores = new ArrayList<Integer>();\r\n\t\tif (cards.size() == 0) {\r\n\t\t\treturn scores;\r\n\t\t}\r\n\t\tfor (BlackJackCard card : cards) {\r\n\t\t\taddCardToScoreList(card, scores);\r\n\t\t}\r\n\t\treturn scores;\r\n\t}\r\n\t\r\n\tprivate void addCardToScoreList(BlackJackCard card, ArrayList<Integer> scores) {\r\n\t\tif (scores.size() == 0) {\r\n\t\t\tscores.add(0);\r\n\t\t} \r\n\t\tint length = scores.size();\r\n\t\tfor (int i = 0; i < length; i++) {\r\n\t\t\tint score = scores.get(i);\r\n\t\t\tscores.set(i, score + card.minValue());\r\n\t\t\tif (card.minValue() != card.maxValue()) {\r\n\t\t\t\tscores.add(score + card.maxValue());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic boolean busted() {\r\n\t\treturn score() > 21;\r\n\t}\r\n\t\r\n\tpublic boolean is21() {\r\n\t\treturn score() == 21;\r\n\t}\r\n\t\r\n\tpublic boolean isBlackJack() {\r\n\t\tif (cards.size() != 2) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tBlackJackCard first = cards.get(0);\r\n\t\tBlackJackCard second = cards.get(1);\r\n\t\treturn (first.isAce() && second.isFaceCard()) || (second.isAce() && first.isFaceCard());\r\n\t}\r\n}\r\n","Chapter":"Q7_01_Deck_of_Cards"}