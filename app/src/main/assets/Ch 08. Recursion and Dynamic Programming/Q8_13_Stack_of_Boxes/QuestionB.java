{"Id":"acd50685-0fa4-4b9c-8c04-639f6f1571a6","Topic":"QuestionB.java","Question":"","Solution":"package Q8_13_Stack_of_Boxes;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\n\r\npublic class QuestionB {\t\r\n\tpublic static int createStack(ArrayList<Box> boxes) {\r\n\t\tCollections.sort(boxes, new BoxComparator());\r\n\t\tint maxHeight = 0;\r\n\t\tint[] stackMap = new int[boxes.size()];\r\n\t\tfor (int i = 0; i < boxes.size(); i++) {\r\n\t\t\tint height = createStack(boxes, i, stackMap);\r\n\t\t\tmaxHeight = Math.max(maxHeight, height);\r\n\t\t}\r\n\t\treturn maxHeight;\r\n\t}\r\n\t\r\n\tpublic static int createStack(ArrayList<Box> boxes, int bottomIndex, int[] stackMap) {\r\n\t\tif (bottomIndex < boxes.size() && stackMap[bottomIndex] > 0) {\r\n\t\t\treturn stackMap[bottomIndex];\r\n\t\t}\r\n\t\t\r\n\t\tBox bottom = boxes.get(bottomIndex);\r\n\t\tint maxHeight = 0;\r\n\t\tfor (int i = bottomIndex + 1; i < boxes.size(); i++) {\r\n\t\t\tif (boxes.get(i).canBeAbove(bottom)) {\r\n\t\t\t\tint height = createStack(boxes, i, stackMap);\r\n\t\t\t\tmaxHeight = Math.max(height, maxHeight);\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\tmaxHeight += bottom.height;\r\n\t\tstackMap[bottomIndex] = maxHeight;\r\n\t\treturn maxHeight;\r\n\t}\r\n\t\t\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tBox[] boxList = { new Box(6, 4, 4), new Box(8, 6, 2), new Box(5, 3, 3), new Box(7, 8, 3), new Box(4, 2, 2), new Box(9, 7, 3)};\r\n\t\tArrayList<Box> boxes = new ArrayList<Box>();\r\n\t\tfor (Box b : boxList) {\r\n\t\t\tboxes.add(b);\r\n\t\t}\r\n\t\t\r\n\t\tint height = createStack(boxes);\r\n\t\tSystem.out.println(height);\r\n\t}\r\n\r\n}\r\n","Chapter":"Q8_13_Stack_of_Boxes"}