{"Id":"aed2704f-d640-4876-a224-0a40a56413ab","Topic":"Tester.java","Question":"","Solution":"package Q8_14_Boolean_Evaluation;\n\nimport java.util.HashMap;\nimport java.util.Map.Entry;\nimport java.util.Random;\n\npublic class Tester {\n\t\n\tpublic static boolean allEqual(HashMap<String, Integer> map) {\n\t\tint val = 0;\n\t\tfor (Entry<String, Integer> e : map.entrySet()) {\n\t\t\tif (val != 0 && val != e.getValue()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tval = e.getValue();\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tpublic static char getRandomOperator() {\n\t\tRandom rand = new Random();\n\t\tint r = rand.nextInt(3);\n\t\tchar[] ops = {'^', '&', '|'};\n\t\treturn ops[r];\n\t}\n\t\n\tpublic static String getRandomExpression() {\n\t\tRandom rand = new Random();\n\t\tint len = rand.nextInt(10) * 2 + 1;\n\t\tString s = \"\";\n\t\tfor (int i = 0; i < len; i++) {\n\t\t\tchar next = '1';\n\t\t\tif (i % 2 == 0) {\n\t\t\t\tnext = rand.nextBoolean() ? '1' : '0';\n\t\t\t} else {\n\t\t\t\tnext = getRandomOperator();\n\t\t\t}\n\t\t\ts += next;\n\t\t}\n\t\treturn s;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tfor (int i = 0; i < 50; i++) {\n\t\t\t//String terms = \"0^0|1&1^1|0|1\";\n\t\t\tString terms = getRandomExpression();\n\t\t\tboolean result = true;\n\t\t\t\n\t\t\tint oBF = Others.bruteForce(terms, new HashMap<String, Boolean>(), result, new boolean[(terms.length() - 1) / 2]);\n\t\t\tint oR = Others.countR(terms, result, 0, terms.length() - 1);\n\t\t\tint oDP = Others.countDP(terms, result, 0, terms.length() - 1, new HashMap<String, Integer>());\n\t\t\tint oDPEFF = Others.countDPEff(terms, result, 0, terms.length() - 1, new HashMap<String, Integer>());\n\t\t\t\n\t\t\tint a = QuestionA.countEval(terms, result);\n\t\t\tint b = QuestionB.countEval(terms, result);\n\t\t\t\n\t\t\tHashMap<String, Integer> results = new HashMap<String, Integer>();\n\t\t\tresults.put(\"oBF\", oBF);\n\t\t\tresults.put(\"oR\", oR);\n\t\t\tresults.put(\"oDP\", oDP);\n\t\t\tresults.put(\"oDPEFF\", oDPEFF);\n\t\t\tresults.put(\"a\", a);\n\t\t\tresults.put(\"b\", b);\n\t\t\t\n\t\t\tif (allEqual(results)) {\n\t\t\t\tSystem.out.println(\"Success: \" + terms + \"->\" + b);\n\t\t\t\tSystem.out.println(results.toString());\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"Failure: \" + terms);\n\t\t\t\tSystem.out.println(results.toString());\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\n}\n","Chapter":"Q8_14_Boolean_Evaluation"}