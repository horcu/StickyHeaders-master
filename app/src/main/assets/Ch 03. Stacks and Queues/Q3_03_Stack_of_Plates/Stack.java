{"Id":"45ce6160-565f-4fe8-bb7c-de249a6d0de6","Topic":"Stack.java","Question":"","Solution":"package Q3_03_Stack_of_Plates;\r\n\r\nimport java.util.EmptyStackException;\r\n\r\npublic class Stack {\r\n\tprivate int capacity;\r\n\tpublic Node top;\r\n\tpublic Node bottom;\r\n\tpublic int size = 0;\r\n\t\r\n\tpublic Stack(int capacity) { \r\n\t\tthis.capacity = capacity; \r\n\t}\r\n\t\r\n\tpublic boolean isFull() { \r\n\t\treturn capacity == size; \r\n\t}\r\n\t\r\n\tpublic void join(Node above, Node below) {\r\n\t\tif (below != null) below.above = above;\r\n\t\tif (above != null) above.below = below;\r\n\t}\r\n\t\r\n\tpublic boolean push(int v) {\r\n\t\tif (size >= capacity) return false;\r\n\t\tsize++;\r\n\t\tNode n = new Node(v);\r\n\t\tif (size == 1) bottom = n;\r\n\t\tjoin(n, top);\r\n\t\ttop = n;\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tpublic int pop() {\r\n\t\tif (top == null) throw new EmptyStackException();\r\n\t\tNode t = top;\r\n\t\ttop = top.below;\r\n\t\tsize--;\r\n\t\treturn t.value;\r\n\t}\r\n\t\r\n\tpublic boolean isEmpty() { \r\n\t\treturn size == 0; \r\n\t}\r\n\t\r\n\tpublic int removeBottom() {\r\n\t\tNode b = bottom;\r\n\t\tbottom = bottom.above;\r\n\t\tif (bottom != null) bottom.below = null;\r\n\t\tsize--;\r\n\t\treturn b.value;\r\n\t}\r\n}\r\n\r\n","Chapter":"Q3_03_Stack_of_Plates"}