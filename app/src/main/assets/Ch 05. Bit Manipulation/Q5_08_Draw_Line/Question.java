{"Id":"940ec740-5a52-4e40-b1c1-f784ca650add","Topic":"Question.java","Question":"","Solution":"package Q5_08_Draw_Line;\r\n\r\npublic class Question {\r\n\tpublic static int computeByteNum(int width, int x, int y) {\r\n\t\treturn (width * y + x) / 8;\r\n\t}\r\n\t\r\n\tpublic static void drawLine(byte[] screen, int width, int x1, int x2, int y) {\r\n\t\tint start_offset = x1 % 8;\r\n\t\tint first_full_byte = x1 / 8;\r\n\t\tif (start_offset != 0) {\r\n\t\t\tfirst_full_byte++;\r\n\t\t}\r\n\t\t\r\n\t\tint end_offset = x2 % 8;\r\n\t\tint last_full_byte = x2 / 8;\r\n\t\tif (end_offset != 7) {\r\n\t\t\tlast_full_byte--;\r\n\t\t}\r\n\t\t\r\n\t\t// Set full bytes\r\n\t\tfor (int b = first_full_byte; b <= last_full_byte; b++) {\r\n\t\t\tscreen[(width / 8) * y + b] = (byte) 0xFF;\r\n\t\t}\r\n\t\t\r\n\t\tbyte start_mask = (byte) (0xFF >> start_offset);\r\n\t\tbyte end_mask = (byte) ~(0xFF >> (end_offset + 1));\r\n\t\t\r\n\t\t// Set start and end of line\r\n\t\tif ((x1 / 8) == (x2 / 8)) { // If x1 and x2 are in the same byte\r\n\t\t\tbyte mask = (byte) (start_mask & end_mask);\r\n\t\t\tscreen[(width / 8) * y + (x1 / 8)] |= mask;\r\n\t\t} else {\r\n\t\t\tif (start_offset != 0) {\r\n\t\t\t\tint byte_number = (width / 8) * y + first_full_byte - 1;\r\n\t\t\t\tscreen[byte_number] |= start_mask;\r\n\t\t\t}\r\n\t\t\tif (end_offset != 7) {\r\n\t\t\t\tint byte_number = (width / 8) * y + last_full_byte + 1;\r\n\t\t\t\tscreen[byte_number] |= end_mask;\r\n\t\t\t} \r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static void printByte(byte b) {\r\n\t\tfor (int i = 7; i >= 0; i--) {\r\n\t\t\tchar c = ((b >> i) & 1) == 1 ? '1' : '_';\r\n\t\t\tSystem.out.print(c);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static void printScreen(byte[] screen, int width) {\r\n\t\tint height = screen.length * 8 / width;\r\n\t\tfor (int r = 0; r < height; r++) {\r\n\t\t\tfor (int c = 0; c < width; c+=8) {\r\n\t\t\t\tbyte b = screen[computeByteNum(width, c, r)];\r\n\t\t\t\tprintByte(b);\r\n\t\t\t}\r\n\t\t\tSystem.out.println(\"\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tint width = 8 * 1;\r\n\t\tint height = 1;\r\n\t\tfor (int r = 0; r < height; r++) {\r\n\t\t\tfor (int c1 = 0; c1 < width; c1++) {\r\n\t\t\t\tfor (int c2 = c1; c2 < width; c2++) {\r\n\t\t\t\t\tbyte[] screen = new byte[width * height / 8];\r\n\r\n\t\t\t\t\tSystem.out.println(\"row: \" + r + \": \" + c1 + \" -> \" + c2);\r\n\t\t\t\t\tdrawLine(screen, width, c1, c2, r);\r\n\t\t\t\t\tprintScreen(screen, width);\r\n\t\t\t\t\tSystem.out.println(\"\\n\\n\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","Chapter":"Q5_08_Draw_Line"}