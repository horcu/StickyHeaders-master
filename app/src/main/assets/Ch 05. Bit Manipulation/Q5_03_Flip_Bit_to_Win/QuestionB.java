{"Id":"da0c3abd-6a74-4846-9ad3-897463e07487","Topic":"QuestionB.java","Question":"","Solution":"package Q5_03_Flip_Bit_to_Win;\n\nimport java.util.ArrayList;\n\npublic class QuestionB {\n\t\n\tpublic static int longestSequence(int n) {\n\t\tif (n == -1) return Integer.BYTES * 8;\n\t\tArrayList<Integer> sequences = getAlternatingSequences(n);\n\t\treturn findLongestSequence(sequences);\n\t}\t\n\t\n\t/* Return a list of the sizes of the sequences. The sequence starts \n\t * off with the number of 0s (which might be 0) and then alternates\n\t * with the counts of each value.*/\n\tpublic static ArrayList<Integer> getAlternatingSequences(int n) {\n\t\tArrayList<Integer> sequences = new ArrayList<Integer>();\n\t\t\n\t\tint searchingFor = 0;\n\t\tint counter = 0;\n\t\t\n\t\tfor (int i = 0; i < Integer.BYTES * 8; i++) {\n\t\t\tif ((n & 1) != searchingFor) {\n\t\t\t\tsequences.add(counter);\n\t\t\t\tsearchingFor = n & 1; // Flip 1 to 0 or 0 to 1\n\t\t\t\tcounter = 0;\t\n\t\t\t}\n\t\t\tcounter++;\n\t\t\tn >>>= 1;\n\t\t}\n\t\tsequences.add(counter);\n\t\t\n\t\treturn sequences;\n\t}\n\t\n\tpublic static int findLongestSequence(ArrayList<Integer> seq) {\n\t\tint maxSeq = 1;\n\t\t\n\t\tfor (int i = 0; i < seq.size(); i += 2) {\n\t\t\tint zerosSeq = seq.get(i);\n\t\t\tint onesSeqRight = i - 1 >= 0 ? seq.get(i - 1) : 0;\n\t\t\tint onesSeqLeft = i + 1 < seq.size() ? seq.get(i + 1) : 0;\n\t\t\t\n\t\t\tint thisSeq = 0;\n\t\t\tif (zerosSeq == 1) { // Can merge\n\t\t\t\tthisSeq = onesSeqLeft + 1 + onesSeqRight; \n\t\t\t} if (zerosSeq > 1) { // Just add a zero to either side\n\t\t\t\tthisSeq = 1 + Math.max(onesSeqRight, onesSeqLeft);\n\t\t\t} else if (zerosSeq == 0) { // No zero, but take either side\n\t\t\t\tthisSeq = Math.max(onesSeqRight, onesSeqLeft);\n\t\t\t}\n\t\t\tmaxSeq = Math.max(thisSeq, maxSeq);\n\t\t}\n\t\t\n\t\treturn maxSeq;\n\t}\t\n\t\n\tpublic static void main(String[] args) {\n\t\tint original_number = 1775;\n\t\tint new_number = longestSequence(original_number);\n\t\t\t\n\t\tSystem.out.println(Integer.toBinaryString(original_number));\n\t\tSystem.out.println(new_number);\t\t\t\t\n\t}\n\n}\n","Chapter":"Q5_03_Flip_Bit_to_Win"}