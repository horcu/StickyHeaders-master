{"Id":"768e6f29-bcd7-40aa-82d4-d68a4df0d18a","Topic":"RightShifts.java","Question":"","Solution":"package Sample_Code;\n\nimport CtCILibrary.AssortedMethods;\n\npublic class RightShifts {\n\tpublic static int repeatedArithmeticShift(int x, int count) {\n\t\tfor (int i = 0; i < count; i++) {\n\t\t\tx >>= 1; // Arithmetic shift by 1\n\t\t}\n\t\treturn x;\n\t}\n\t\n\tpublic static int repeatedLogicalShift(int x, int count) {\n\t\tfor (int i = 0; i < count; i++) {\n\t\t\tx >>>= 1; // Logical shift by 1\n\t\t}\n\t\treturn x;\n\t}\t\n\t\n\tpublic static void main(String[] args) {\n\t\tfor (int i = 8; i >= -8; i--) {\n\t\t\tSystem.out.println(AssortedMethods.toFullBinaryString(i) + \": \" + i);\n\t\t}\n\t\t\n\t\tint x = -93242;\n\t\tint resultArithmetic = repeatedArithmeticShift(x, 40);\n\t\tint resultLogical = repeatedLogicalShift(x, 40);\n\t\tSystem.out.println(AssortedMethods.toFullBinaryString(resultArithmetic) + \": \" + resultArithmetic);\n\t\tSystem.out.println(AssortedMethods.toFullBinaryString(resultLogical) + \": \" + resultLogical);\n\t}\n\n}\n","Chapter":"Sample_Code"}