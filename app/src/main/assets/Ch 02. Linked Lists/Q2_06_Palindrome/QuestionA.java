{"Id":"9d3933c8-8dac-4f55-8656-32917966d584","Topic":"QuestionA.java","Question":"","Solution":"package Q2_06_Palindrome;\r\n\r\nimport CtCILibrary.LinkedListNode;\r\n\r\npublic class QuestionA {\r\n\tpublic static boolean isPalindrome(LinkedListNode head) {\r\n\t\tLinkedListNode reversed = reverseAndClone(head);\r\n\t\treturn isEqual(head, reversed);\r\n\t}\r\n\t\t\r\n\tpublic static LinkedListNode reverseAndClone(LinkedListNode node) {\r\n\t\tLinkedListNode head = null;\r\n\t\twhile (node != null) {\r\n\t\t\tLinkedListNode n = new LinkedListNode(node.data); // Clone\r\n\t\t\tn.next = head;\r\n\t\t\thead = n;\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\t\treturn head;\r\n\t}\t\r\n\t\t\r\n\tpublic static boolean isEqual(LinkedListNode one, LinkedListNode two) {\r\n\t\twhile (one != null && two != null) {\r\n\t\t\tif (one.data != two.data) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tone = one.next;\r\n\t\t\ttwo = two.next;\r\n\t\t}\r\n\t\treturn one == null && two == null;\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tint length = 9;\r\n\t\tLinkedListNode[] nodes = new LinkedListNode[length];\r\n\t\tfor (int i = 0; i < length; i++) {\r\n\t\t\tnodes[i] = new LinkedListNode(i >= length / 2 ? length - i - 1 : i, null, null);\r\n\t\t}\r\n\t\t\r\n\t\tfor (int i = 0; i < length; i++) {\r\n\t\t\tif (i < length - 1) {\r\n\t\t\t\tnodes[i].setNext(nodes[i + 1]);\r\n\t\t\t}\r\n\t\t\tif (i > 0) {\r\n\t\t\t\tnodes[i].setPrevious(nodes[i - 1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// nodes[length - 2].data = 9; // Uncomment to ruin palindrome\r\n\t\t\r\n\t\tLinkedListNode head = nodes[0];\r\n\t\tSystem.out.println(head.printForward());\r\n\t\tSystem.out.println(isPalindrome(head));\r\n\t}\r\n\r\n}\r\n","Chapter":"Q2_06_Palindrome"}