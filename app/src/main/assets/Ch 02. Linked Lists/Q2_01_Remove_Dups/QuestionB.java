{"Id":"a50ceee1-9fa5-4557-b349-8a9636134095","Topic":"QuestionB.java","Question":"","Solution":"package Q2_01_Remove_Dups;\r\n\r\nimport CtCILibrary.LinkedListNode;\r\n\r\npublic class QuestionB {\r\n\tpublic static void deleteDups(LinkedListNode head) {\r\n\t\tLinkedListNode current = head;\r\n\t\twhile (current != null) {\r\n\t\t\t/* Remove all future nodes that have the same value */\r\n\t\t\tLinkedListNode runner = current;\r\n\t\t\twhile (runner.next != null) { \r\n\t\t\t\tif (runner.next.data == current.data) {\r\n\t\t\t\t\trunner.next = runner.next.next;\r\n\t\t\t\t} else {\r\n\t\t\t\t\trunner = runner.next;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcurrent = current.next;\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tpublic static void main(String[] args) {\t\r\n\t\tLinkedListNode first = new LinkedListNode(0, null, null); //AssortedMethods.randomLinkedList(1000, 0, 2);\r\n\t\tLinkedListNode head = first;\r\n\t\tLinkedListNode second = first;\r\n\t\tfor (int i = 1; i < 8; i++) {\r\n\t\t\tsecond = new LinkedListNode(i % 2, null, null);\r\n\t\t\tfirst.setNext(second);\r\n\t\t\tsecond.setPrevious(first);\r\n\t\t\tfirst = second;\r\n\t\t}\r\n\t\tSystem.out.println(head.printForward());\r\n\t\tdeleteDups(head);\r\n\t}\r\n}\r\n","Chapter":"Q2_01_Remove_Dups"}