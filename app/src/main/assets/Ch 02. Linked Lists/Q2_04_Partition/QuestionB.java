{"Id":"871115ef-6fa2-412a-8dfd-2ed512169515","Topic":"QuestionB.java","Question":"","Solution":"package Q2_04_Partition;\r\n\r\nimport CtCILibrary.LinkedListNode;\r\n\r\npublic class QuestionB {\r\n\r\n\tpublic static LinkedListNode partition(LinkedListNode node, int x) {\r\n\t\tLinkedListNode beforeStart = null;\r\n\t\tLinkedListNode afterStart = null;\r\n\t\t\r\n\t\t/* Partition list */\r\n\t\twhile (node != null) {\r\n\t\t\tLinkedListNode next = node.next;\r\n\t\t\tif (node.data < x) {\r\n\t\t\t\t/* Insert node into start of before list */\r\n\t\t\t\tnode.next = beforeStart;\r\n\t\t\t\tbeforeStart = node;\t\r\n\t\t\t} else {\r\n\t\t\t\t/* Insert node into front of after list */\r\n\t\t\t\tnode.next = afterStart;\r\n\t\t\t\tafterStart = node;\r\n\t\t\t}\t\r\n\t\t\tnode = next;\r\n\t\t}\r\n\t\t\r\n\t\t/* Merge before list and after list */\r\n\t\tif (beforeStart == null) {\r\n\t\t\treturn afterStart;\r\n\t\t}\r\n\t\t\r\n\t\tLinkedListNode head = beforeStart;\r\n\t\twhile (beforeStart.next != null) {\r\n\t\t\tbeforeStart = beforeStart.next;\r\n\t\t}\r\n\t\tbeforeStart.next = afterStart;\r\n\t\treturn head;\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tint length = 20;\r\n\t\tLinkedListNode[] nodes = new LinkedListNode[length];\r\n\t\tfor (int i = 0; i < length; i++) {\r\n\t\t\tnodes[i] = new LinkedListNode(i >= length / 2 ? length - i - 1 : i, null, null);\r\n\t\t}\r\n\t\t\r\n\t\tfor (int i = 0; i < length; i++) {\r\n\t\t\tif (i < length - 1) {\r\n\t\t\t\tnodes[i].setNext(nodes[i + 1]);\r\n\t\t\t}\r\n\t\t\tif (i > 0) {\r\n\t\t\t\tnodes[i].setPrevious(nodes[i - 1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tLinkedListNode head = nodes[0];\r\n\t\tSystem.out.println(head.printForward());\r\n\t\t\r\n\t\tLinkedListNode h = partition(head, 7);\r\n\t\tSystem.out.println(h.printForward());\r\n\t}\r\n\r\n}\r\n","Chapter":"Q2_04_Partition"}