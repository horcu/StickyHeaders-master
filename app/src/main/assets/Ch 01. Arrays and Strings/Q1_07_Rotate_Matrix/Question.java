{"Id":"70ecea6a-5ddf-4384-8612-2daf65cfc167","Topic":"Question.java","Question":"","Solution":"package Q1_07_Rotate_Matrix;\r\n\r\nimport CtCILibrary.*;\r\n\r\npublic class Question {\r\n\r\n\tpublic static boolean rotate(int[][] matrix) {\r\n\t\tif (matrix.length == 0 || matrix.length != matrix[0].length) return false; // Not a square\r\n\t\tint n = matrix.length;\r\n\t\t\r\n\t\tfor (int layer = 0; layer < n / 2; layer++) {\r\n\t\t\tint first = layer;\r\n\t\t\tint last = n - 1 - layer;\r\n\t\t\tfor(int i = first; i < last; i++) {\r\n\t\t\t\tint offset = i - first;\r\n\t\t\t\tint top = matrix[first][i]; // save top\r\n\r\n\t\t\t\t// left -> top\r\n\t\t\t\tmatrix[first][i] = matrix[last-offset][first]; \t\t\t\r\n\r\n\t\t\t\t// bottom -> left\r\n\t\t\t\tmatrix[last-offset][first] = matrix[last][last - offset]; \r\n\r\n\t\t\t\t// right -> bottom\r\n\t\t\t\tmatrix[last][last - offset] = matrix[i][last]; \r\n\r\n\t\t\t\t// top -> right\r\n\t\t\t\tmatrix[i][last] = top; // right <- saved top\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tint[][] matrix = AssortedMethods.randomMatrix(3, 3, 0, 9);\r\n\t\tAssortedMethods.printMatrix(matrix);\r\n\t\trotate(matrix);\r\n\t\tSystem.out.println();\r\n\t\tAssortedMethods.printMatrix(matrix);\r\n\t}\r\n\r\n}\r\n","Chapter":"Q1_07_Rotate_Matrix"}