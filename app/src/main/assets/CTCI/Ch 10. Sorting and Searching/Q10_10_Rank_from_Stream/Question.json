{"Id":"bef64322-54fc-44ac-85b0-33a85229c654","Topic":"Ch 10. Sorting and Searching","Question":"","Solution":"package Q10_10_Rank_from_Stream;\r\n\r\nimport CtCILibrary.AssortedMethods;\r\n\r\npublic class Question {\r\n\tprivate static RankNode root = null;\r\n\t\r\n\tpublic static void track(int number) {\r\n\t\tif (root == null) {\r\n\t\t\troot = new RankNode(number);\r\n\t\t} else {\r\n\t\t\troot.insert(number);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static int getRankOfNumber(int number) {\r\n\t\treturn root.getRank(number);\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tint size = 100;\r\n\t\tint[] list = AssortedMethods.randomArray(size, -100, 100);\r\n\t\tfor (int i = 0; i < list.length; i++) {\r\n\t\t\ttrack(list[i]);\r\n\t\t}\r\n\t\t\r\n\t\tint[] tracker = new int[size];\r\n\t\tfor (int i = 0; i < list.length; i++) {\r\n\t\t\tint v = list[i];\r\n\t\t\tint rank1 = root.getRank(list[i]);\r\n\t\t\ttracker[rank1] = v;\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (int i = 0; i < tracker.length - 1; i++) {\r\n\t\t\tif (tracker[i] != 0 && tracker[i + 1] != 0) {\r\n\t\t\t\tif (tracker[i] > tracker[i + 1]) {\r\n\t\t\t\t\tSystem.out.println(\"ERROR at \" + i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tSystem.out.println(\"Array: \" + AssortedMethods.arrayToString(list));\r\n\t\tSystem.out.println(\"Ranks: \" + AssortedMethods.arrayToString(tracker));\r\n\t}\r\n\r\n}\r\n","Chapter":"Ch 10. Sorting and Searching"}