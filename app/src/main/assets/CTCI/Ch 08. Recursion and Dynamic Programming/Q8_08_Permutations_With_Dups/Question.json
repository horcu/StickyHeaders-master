{"Id":"83abf2d8-3e8a-493f-adf2-007e5d33ea27","Topic":"Ch 08. Recursion and Dynamic Programming","Question":"","Solution":"package Q8_08_Permutations_With_Dups;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Question {\t\n\tpublic static HashMap<Character, Integer> buildFreqTable(String s) {\n\t\tHashMap<Character, Integer> map = new HashMap<Character, Integer>();\n\t\tfor (char c : s.toCharArray()) {\n\t\t\tif (!map.containsKey(c)) {\n\t\t\t\tmap.put(c, 0);\n\t\t\t}\n\t\t\tmap.put(c, map.get(c) + 1);\n\t\t}\n\t\treturn map;\n\t}\n\t\n\tpublic static void printPerms(HashMap<Character, Integer> map, String prefix, int remaining, ArrayList<String> result) {\n\t\tif (remaining == 0) {\n\t\t\tresult.add(prefix);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tfor (Character c : map.keySet()) {\n\t\t\tint count = map.get(c);\n\t\t\tif (count > 0) {\n\t\t\t\tmap.put(c,  count - 1);\n\t\t\t\tprintPerms(map, prefix + c, remaining - 1, result);\n\t\t\t\tmap.put(c,  count);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static ArrayList<String> printPerms(String s) {\n\t\tArrayList<String> result = new ArrayList<String>();\n\t\tHashMap<Character, Integer> map = buildFreqTable(s);\n\t\tprintPerms(map, \"\", s.length(), result);\n\t\treturn result;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tString s = \"aabbccc\";\n\t\tArrayList<String> result = printPerms(s);\n\t\tSystem.out.println(\"Count: \" + result.size());\n\t\tfor (String r : result) {\n\t\t\tSystem.out.println(r);\n\t\t}\n\t}\n\n}\n","Chapter":"Ch 08. Recursion and Dynamic Programming"}