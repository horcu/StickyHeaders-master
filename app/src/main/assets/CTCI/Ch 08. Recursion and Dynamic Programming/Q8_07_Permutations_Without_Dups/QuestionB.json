{"Id":"492c8974-5618-4af6-b684-a8fd388f459f","Topic":"Ch 08. Recursion and Dynamic Programming","Question":"","Solution":"package Q8_07_Permutations_Without_Dups;\r\n\r\nimport java.util.*;\r\n\r\npublic class QuestionB {\r\n\tpublic static ArrayList<String> getPerms(String remainder) {\r\n\t\tint len = remainder.length();\r\n\t\tArrayList<String> result = new ArrayList<String>();\r\n\t\t\r\n\t\t/* Base case. */\r\n\t\tif (len == 0) {\r\n\t\t\tresult.add(\"\"); // Be sure to return empty string!\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tfor (int i = 0; i < len; i++) {\r\n\t\t\t/* Remove char i and find permutations of remaining characters.*/\r\n\t\t\tString before = remainder.substring(0, i);\r\n\t\t\tString after = remainder.substring(i + 1, len);\r\n\t\t\tArrayList<String> partials = getPerms(before + after);\r\n\t\t\t\r\n\t\t\t/* Prepend char i to each permutation.*/\r\n\t\t\tfor (String s : partials) {\r\n\t\t\t\tresult.add(remainder.charAt(i) + s);\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tArrayList<String> list = getPerms(\"abc\");\r\n\t\tSystem.out.println(\"There are \" + list.size() + \" permutations.\");\r\n\t\tfor (String s : list) {\r\n\t\t\tSystem.out.println(s);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","Chapter":"Ch 08. Recursion and Dynamic Programming"}