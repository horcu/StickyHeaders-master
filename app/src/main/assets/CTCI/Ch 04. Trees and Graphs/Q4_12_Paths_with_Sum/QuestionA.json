{"Id":"95448589-bead-4d85-a9e0-494002ed7823","Topic":"Ch 04. Trees and Graphs","Question":"","Solution":"package Q4_12_Paths_with_Sum;\r\n\r\nimport CtCILibrary.TreeNode;\r\n\r\npublic class QuestionA {\r\n\t\r\n\tpublic static int countPathsWithSum(TreeNode root, int targetSum) {\r\n\t\tif (root == null) return 0;\r\n\t\t\r\n\t\t/* Count paths with sum starting from the root. */\r\n\t\tint pathsFromRoot = countPathsWithSumFromNode(root, targetSum, 0);\r\n\t\t\r\n\t\t/* Try the nodes on the left and right. */\r\n\t\tint pathsOnLeft = countPathsWithSum(root.left, targetSum);\r\n\t\tint pathsOnRight = countPathsWithSum(root.right, targetSum);\r\n\t\t\r\n\t\treturn pathsFromRoot + pathsOnLeft + pathsOnRight;\r\n\t}\r\n\t\r\n\t/* Returns the number of paths with this sum starting from this node. */\r\n\tpublic static int countPathsWithSumFromNode(TreeNode node, int targetSum, int currentSum) {\r\n\t\tif (node == null) return 0;\r\n\t\r\n\t\tcurrentSum += node.data;\r\n\t\t\r\n\t\tint totalPaths = 0;\r\n\t\tif (currentSum == targetSum) { // Found a path from the root\r\n\t\t\ttotalPaths++;\r\n\t\t}\r\n\t\t\r\n\t\ttotalPaths += countPathsWithSumFromNode(node.left, targetSum, currentSum); // Go left\r\n\t\ttotalPaths += countPathsWithSumFromNode(node.right, targetSum, currentSum); // Go right\r\n\t\t\r\n\t\treturn totalPaths;\r\n\t}\t\r\n\r\n\tpublic static void main(String [] args) {\r\n\t\t/*\r\n\t\tTreeNode root = new TreeNode(5);\r\n\t\troot.left = new TreeNode(3);\t\t\r\n\t\troot.right = new TreeNode(1);\r\n\t\troot.left.left = new TreeNode(-8);\r\n\t\troot.left.right = new TreeNode(8);\r\n\t\troot.right.left = new TreeNode(2);\r\n\t\troot.right.right = new TreeNode(6);\t\r\n\t\tSystem.out.println(countPathsWithSum(root, 0));*/\r\n\t\t\r\n\t\t/*TreeNode root = new TreeNode(-7);\r\n\t\troot.left = new TreeNode(-7);\r\n\t\troot.left.right = new TreeNode(1);\r\n\t\troot.left.right.left = new TreeNode(2);\r\n\t\troot.right = new TreeNode(7);\r\n\t\troot.right.left = new TreeNode(3);\r\n\t\troot.right.right = new TreeNode(20);\r\n\t\troot.right.right.left = new TreeNode(0);\r\n\t\troot.right.right.left.left = new TreeNode(-3);\r\n\t\troot.right.right.left.left.right = new TreeNode(2);\r\n\t\troot.right.right.left.left.right.left = new TreeNode(1);\r\n\t\tSystem.out.println(countPathsWithSum(root, -14));*/\r\n\t\t\r\n\t\tTreeNode root = new TreeNode(0);\r\n\t\troot.left = new TreeNode(0);\r\n\t\troot.right = new TreeNode(0);\r\n\t\troot.right.left = new TreeNode(0);\r\n\t\troot.right.left.right = new TreeNode(0);\r\n\t\troot.right.right = new TreeNode(0);\r\n\t\tSystem.out.println(countPathsWithSum(root, 0));\r\n\t\tSystem.out.println(countPathsWithSum(root, 4));\r\n\t}\r\n}\r\n\r\n","Chapter":"Ch 04. Trees and Graphs"}