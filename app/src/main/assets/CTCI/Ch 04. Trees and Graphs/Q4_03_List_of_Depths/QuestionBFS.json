{"Id":"b98ecdf4-7119-4b4e-a5e6-1809f096745d","Topic":"Ch 04. Trees and Graphs","Question":"","Solution":"package Q4_03_List_of_Depths;\r\n\r\nimport CtCILibrary.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Iterator;\r\nimport java.util.LinkedList;\r\n\r\npublic class QuestionBFS {\r\n\r\n\tpublic static ArrayList<LinkedList<TreeNode>> createLevelLinkedList(TreeNode root) {\r\n\t\tArrayList<LinkedList<TreeNode>> result = new ArrayList<LinkedList<TreeNode>>();\r\n\t\t\r\n\t\t/* \"Visit\" the root */\r\n\t\tLinkedList<TreeNode> current = new LinkedList<TreeNode>();\r\n\t\tif (root != null) {\r\n\t\t\tcurrent.add(root);\r\n\t\t}\r\n\t\t\r\n\t\twhile (current.size() > 0) {\r\n\t\t\tresult.add(current); // Add previous level\r\n\t\t\tLinkedList<TreeNode> parents = current; // Go to next level\r\n\t\t\tcurrent = new LinkedList<TreeNode>(); \r\n\t\t\tfor (TreeNode parent : parents) {\r\n\t\t\t\t/* Visit the children */\r\n\t\t\t\tif (parent.left != null) {\r\n\t\t\t\t\tcurrent.add(parent.left);\r\n\t\t\t\t}\r\n\t\t\t\tif (parent.right != null) {\r\n\t\t\t\t\tcurrent.add(parent.right);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tpublic static void printResult(ArrayList<LinkedList<TreeNode>> result){\r\n\t\tint depth = 0;\r\n\t\tfor(LinkedList<TreeNode> entry : result) {\r\n\t\t\tIterator<TreeNode> i = entry.listIterator();\r\n\t\t\tSystem.out.print(\"Link list at depth \" + depth + \":\");\r\n\t\t\twhile(i.hasNext()){\r\n\t\t\t\tSystem.out.print(\" \" + ((TreeNode)i.next()).data);\r\n\t\t\t}\r\n\t\t\tSystem.out.println();\r\n\t\t\tdepth++;\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tint[] nodes_flattened = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\r\n\t\tTreeNode root = AssortedMethods.createTreeFromArray(nodes_flattened);\r\n\t\tArrayList<LinkedList<TreeNode>> list = createLevelLinkedList(root);\r\n\t\tprintResult(list);\r\n\t}\r\n\r\n}\r\n","Chapter":"Ch 04. Trees and Graphs"}