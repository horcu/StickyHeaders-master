{"Id":"208b2538-dfe9-49fa-9026-791c9165645e","Topic":"Ch 04. Trees and Graphs","Question":"","Solution":"package Q4_10_Check_Subtree;\r\n\r\nimport CtCILibrary.AssortedMethods;\r\nimport CtCILibrary.TreeNode;\r\n\r\npublic class QuestionB {\r\n\r\n\tpublic static boolean containsTree(TreeNode t1, TreeNode t2) {\r\n\t\tif (t2 == null) {\r\n\t\t\treturn true; // The empty tree is a subtree of every tree.\r\n\t\t}\r\n\t\treturn subTree(t1, t2);\r\n\t}\r\n\t\r\n\t/* Checks if the binary tree rooted at r1 contains the binary tree \r\n\t * rooted at r2 as a subtree somewhere within it.\r\n\t */\r\n\tpublic static boolean subTree(TreeNode r1, TreeNode r2) {\r\n\t\tif (r1 == null) {\r\n\t\t\treturn false; // big tree empty & subtree still not found.\r\n\t\t} else if (r1.data == r2.data && matchTree(r1,r2)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn subTree(r1.left, r2) || subTree(r1.right, r2); \r\n\t}\r\n\r\n\t/* Checks if the binary tree rooted at r1 contains the \r\n\t * binary tree rooted at r2 as a subtree starting at r1.\r\n\t */\r\n\tpublic static boolean matchTree(TreeNode r1, TreeNode r2) {\r\n\t\tif (r1 == null && r2 == null) {\r\n\t\t\treturn true; // nothing left in the subtree\r\n\t\t} else if (r1 == null || r2 == null) { \r\n\t\t\treturn false; // exactly tree is empty, therefore trees don't match\r\n\t\t} else if (r1.data != r2.data) {  \r\n\t\t\treturn false;  // data doesn't match\r\n\t\t} else {\r\n\t\t\treturn matchTree(r1.left, r2.left) && matchTree(r1.right, r2.right);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\t// t2 is a subtree of t1\r\n\t\tint[] array1 = {1, 2, 1, 3, 1, 1, 5};\r\n\t\tint[] array2 = {2, 3, 1};\r\n\t\t\r\n\t\tTreeNode t1 = AssortedMethods.createTreeFromArray(array1);\r\n\t\tTreeNode t2 = AssortedMethods.createTreeFromArray(array2);\r\n\r\n\t\tif (containsTree(t1, t2)) {\r\n\t\t\tSystem.out.println(\"t2 is a subtree of t1\");\r\n\t\t} else {\r\n\t\t\tSystem.out.println(\"t2 is not a subtree of t1\");\r\n\t\t}\r\n\r\n\t\t// t4 is not a subtree of t3\r\n\t\tint[] array3 = {1, 2, 3};\r\n\t\tTreeNode t3 = AssortedMethods.createTreeFromArray(array1);\r\n\t\tTreeNode t4 = AssortedMethods.createTreeFromArray(array3);\r\n\r\n\t\tif (containsTree(t3, t4)) {\r\n\t\t\tSystem.out.println(\"t4 is a subtree of t3\");\r\n\t\t} else {\r\n\t\t\tSystem.out.println(\"t4 is not a subtree of t3\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","Chapter":"Ch 04. Trees and Graphs"}