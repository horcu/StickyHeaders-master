{"Id":"9de4394a-0ba2-4c2a-9b02-17b8cb5e00e3","Topic":"Ch 07. Object-Oriented Design","Question":"","Solution":"package Q7_01_Deck_of_Cards;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Question {\r\n\r\n\t\r\n\tpublic static void main(String[] args) {\t\r\n\t\tint numHands = 5;\r\n\t\t\r\n\t\tBlackJackGameAutomator automator = new BlackJackGameAutomator(numHands);\r\n\t\tautomator.initializeDeck();\r\n\t\tboolean success = automator.dealInitial();\r\n\t\t\tif (!success) {\r\n\t\t\t\tSystem.out.println(\"Error. Out of cards.\");\r\n\t\t\t} else {\r\n\t\t\tSystem.out.println(\"-- Initial --\");\r\n\t\t\tautomator.printHandsAndScore();\r\n\t\t\tArrayList<Integer> blackjacks = automator.getBlackJacks();\r\n\t\t\tif (blackjacks.size() > 0) {\r\n\t\t\t\tSystem.out.print(\"Blackjack at \");\r\n\t\t\t\tfor (int i : blackjacks) {\r\n\t\t\t\t\tSystem.out.print(i + \", \");\r\n\t\t\t\t}\r\n\t\t\t\tSystem.out.println(\"\");\r\n\t\t\t} else {\r\n\t\t\t\tsuccess = automator.playAllHands();\r\n\t\t\t\tif (!success) {\r\n\t\t\t\t\tSystem.out.println(\"Error. Out of cards.\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tSystem.out.println(\"\\n-- Completed Game --\");\r\n\t\t\t\t\tautomator.printHandsAndScore();\r\n\t\t\t\t\tArrayList<Integer> winners = automator.getWinners();\r\n\t\t\t\t\tif (winners.size() > 0) {\r\n\t\t\t\t\t\tSystem.out.print(\"Winners: \");\r\n\t\t\t\t\t\tfor (int i : winners) {\r\n\t\t\t\t\t\t\tSystem.out.print(i + \", \");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tSystem.out.println(\"\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tSystem.out.println(\"Draw. All players have busted.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","Chapter":"Ch 07. Object-Oriented Design"}