{"Id":"2917fee4-1c65-4b7d-a03f-ee277304587f","Topic":"Ch 07. Object-Oriented Design","Question":"","Solution":"package Q7_01_Deck_of_Cards;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport CtCILibrary.AssortedMethods;\r\n\r\npublic class Deck <T extends Card> {\r\n\tprivate ArrayList<T> cards;\r\n\tprivate int dealtIndex = 0; // marks first undealt card\r\n\t\r\n\tpublic Deck() {\r\n\t}\r\n\t\r\n\tpublic void setDeckOfCards(ArrayList<T> deckOfCards) {\r\n\t\tcards = deckOfCards;\r\n\t}\r\n\t\r\n\tpublic void shuffle() {\r\n\t\tfor (int i = 0; i < cards.size(); i++) {\r\n\t\t\tint j = AssortedMethods.randomIntInRange(i, cards.size() - i - 1);\r\n\t\t\tT card1 = cards.get(i);\r\n\t\t\tT card2 = cards.get(j);\r\n\t\t\tcards.set(i, card2);\r\n\t\t\tcards.set(j, card1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic int remainingCards() {\r\n\t\treturn cards.size() - dealtIndex;\r\n\t}\r\n\t\r\n\tpublic T[] dealHand(int number) {\r\n\t\tif (remainingCards() < number) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n\t\tT[] hand = (T[]) new Card[number];\r\n\t\tint count = 0;\r\n\t\twhile (count < number) {\r\n\t\t\tT card = dealCard();\r\n\t\t\tif (card != null) {\r\n\t\t\t\thand[count] = card;\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn hand;\r\n\t}\r\n\t\r\n\tpublic T dealCard() {\r\n\t\tif (remainingCards() == 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n\t\tT card = cards.get(dealtIndex);\r\n\t\tcard.markUnavailable();\r\n\t\tdealtIndex++;\r\n\t\t\r\n\t\treturn card;\t\t\r\n\t}\r\n\t\r\n\tpublic void print() {\r\n\t\tfor (Card card : cards) {\r\n\t\t\tcard.print();\r\n\t\t}\r\n\t}\r\n}\r\n","Chapter":"Ch 07. Object-Oriented Design"}