{"Id":"9b85829d-cfda-4a9a-b1e5-42e6e1228e22","Topic":"Ch 07. Object-Oriented Design","Question":"","Solution":"package Q7_07_Chat_Server;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\n\r\npublic class User {\r\n\tprivate int id;\r\n\tprivate UserStatus status = null;\r\n\tprivate HashMap<Integer, PrivateChat> privateChats = new HashMap<Integer, PrivateChat>();\r\n\tprivate ArrayList<GroupChat> groupChats = new ArrayList<GroupChat>();\r\n\tprivate HashMap<Integer, AddRequest> receivedAddRequests = new HashMap<Integer, AddRequest>();\r\n\tprivate HashMap<Integer, AddRequest> sentAddRequests = new HashMap<Integer, AddRequest>();\r\n\t\r\n\tprivate HashMap<Integer, User> contacts = new HashMap<Integer, User>();\r\n\tprivate String accountName;\r\n\tprivate String fullName;\r\n\t\r\n\tpublic User(int id, String accountName, String fullName) {\r\n\t\tthis.accountName = accountName;\r\n\t\tthis.fullName = fullName;\r\n\t\tthis.id = id;\r\n\t}\r\n\t\r\n\tpublic boolean sendMessageToUser(User toUser, String content) {\r\n\t\tPrivateChat chat = privateChats.get(toUser.getId());\r\n\t\tif (chat == null) {\r\n\t\t\tchat = new PrivateChat(this, toUser);\r\n\t\t\tprivateChats.put(toUser.getId(), chat);\r\n\t\t}\r\n\t\tMessage message = new Message(content, new Date());\r\n\t\treturn chat.addMessage(message);\r\n\t}\r\n\t\r\n\tpublic boolean sendMessageToGroupChat(int groupId, String content) {\r\n\t\tGroupChat chat = groupChats.get(groupId);\r\n\t\tif (chat != null) {\r\n\t\t\tMessage message = new Message(content, new Date());\r\n\t\t\treturn chat.addMessage(message);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tpublic void setStatus(UserStatus status) {\r\n\t\tthis.status = status;\r\n\t}\r\n\t\r\n\tpublic UserStatus getStatus() {\r\n\t\treturn status;\r\n\t}\r\n\t\r\n\tpublic boolean addContact(User user) {\r\n\t\tif (contacts.containsKey(user.getId())) {\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\tcontacts.put(user.getId(), user);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic void receivedAddRequest(AddRequest req) {\r\n\t\tint senderId = req.getFromUser().getId();\r\n\t\tif (!receivedAddRequests.containsKey(senderId)) {\r\n\t\t\treceivedAddRequests.put(senderId, req);\r\n\t\t}\t\t\r\n\t}\r\n\t\r\n\tpublic void sentAddRequest(AddRequest req) {\r\n\t\tint receiverId = req.getFromUser().getId();\r\n\t\tif (!sentAddRequests.containsKey(receiverId)) {\r\n\t\t\tsentAddRequests.put(receiverId, req);\r\n\t\t}\t\t\r\n\t}\r\n\t\r\n\tpublic void removeAddRequest(AddRequest req) {\r\n\t\tif (req.getToUser() == this) {\r\n\t\t\treceivedAddRequests.remove(req);\r\n\t\t} else if (req.getFromUser() == this) {\r\n\t\t\tsentAddRequests.remove(req);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic void requestAddUser(String accountName) {\r\n\t\tUserManager.getInstance().addUser(this, accountName);\r\n\t}\r\n\t\r\n\tpublic void addConversation(PrivateChat conversation) {\r\n\t\tUser otherUser = conversation.getOtherParticipant(this);\r\n\t\tprivateChats.put(otherUser.getId(), conversation);\r\n\t}\r\n\r\n\tpublic void addConversation(GroupChat conversation) {\r\n\t\tgroupChats.add(conversation);\r\n\t}\t\r\n\t\r\n\tpublic int getId() {\r\n\t\treturn id;\r\n\t}\r\n\t\r\n\tpublic String getAccountName() {\r\n\t\treturn accountName;\r\n\t}\r\n\t\r\n\tpublic String getFullName() {\r\n\t\treturn fullName;\r\n\t}\r\n}\r\n","Chapter":"Ch 07. Object-Oriented Design"}