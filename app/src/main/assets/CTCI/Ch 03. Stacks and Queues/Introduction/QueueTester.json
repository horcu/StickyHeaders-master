{"Id":"9e65b1b2-887e-41ec-8d7c-d2e4cd6119e5","Topic":"Ch 03. Stacks and Queues","Question":"","Solution":"package Introduction;\n\nimport java.util.LinkedList;\nimport java.util.NoSuchElementException;\nimport java.util.Queue;\n\nimport CtCILibrary.AssortedMethods;\n\npublic class QueueTester {\n\n\tpublic static void main(String[] args) {\n\t\tint[] array = AssortedMethods.randomArray(100, -100, 100);\n\t\tMyQueue<Integer> queue1 = new MyQueue<Integer>();\t\t\n\t\tQueue<Integer> queue2 = new LinkedList<Integer>();\n\t\t\n\t\tfor (int a : array) {\n\t\t\tif (a < 0) {\n\t\t\t\tint top1, top2;\n\t\t\t\ttry {\n\t\t\t\t\ttop1 = queue1.remove();\n\t\t\t\t} catch (NoSuchElementException ex) {\n\t\t\t\t\ttop1 = Integer.MIN_VALUE;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\ttop2 = queue2.remove();\n\t\t\t\t} catch (NoSuchElementException ex) {\n\t\t\t\t\ttop2 = Integer.MIN_VALUE;\n\t\t\t\t}\n\t\t\t\tif (top1 != top2) {\n\t\t\t\t\tSystem.out.println(\"ERROR: mismatching tails\");\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(\"SUCCESS: matching tails: \" + top1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tqueue1.add(a);\n\t\t\t\tqueue2.add(a);\n\t\t\t}\n\t\t}\n\t\t\n\t\twhile (!queue1.isEmpty() || !queue2.isEmpty()) {\n\t\t\tint top1, top2;\n\t\t\ttry {\n\t\t\t\ttop1 = queue1.remove();\n\t\t\t} catch (NoSuchElementException ex) {\n\t\t\t\ttop1 = Integer.MIN_VALUE;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\ttop2 = queue2.remove();\n\t\t\t} catch (NoSuchElementException ex) {\n\t\t\t\ttop2 = Integer.MIN_VALUE;\n\t\t\t}\n\t\t\tif (top1 != top2) {\n\t\t\t\tSystem.out.println(\"ERROR: mismatching tails\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"SUCCESS: matching tails: \" + top1);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","Chapter":"Ch 03. Stacks and Queues"}