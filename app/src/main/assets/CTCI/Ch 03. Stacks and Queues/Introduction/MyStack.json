{"Id":"aa959b38-d895-4722-a740-ec72d26b9881","Topic":"Ch 03. Stacks and Queues","Question":"","Solution":"package Introduction;\n\nimport java.util.EmptyStackException;\n\npublic class MyStack<T> {\n\tprivate static class StackNode<T> {\n\t\tprivate T data;\n\t\tprivate StackNode<T> next;\n\t\t\n\t\tpublic StackNode(T data) {\n\t\t\tthis.data = data;\n\t\t}\n\t\t\n\t\tpublic T getData() {\n\t\t\treturn data;\n\t\t}\n\t}\n\t\n\tprivate StackNode<T> top;\n\n\tpublic T pop() {\n\t\tif (top == null) throw new EmptyStackException();\n\t\tT item = top.getData();\n\t\ttop = top.next;\n\t\treturn item;\n\t}\n\n\tpublic void push(T item) { \n\t\tStackNode<T> t = new StackNode<T>(item);\n\t\tt.next = top;\n\t\ttop = t;\n\t} \n\n\tpublic T peek() {\n\t\tif (top == null) throw new EmptyStackException();\n\t\treturn top.data;\n\t}\n\t\n\tpublic boolean isEmpty() {\n\t\treturn top == null;\n\t}\n}\n","Chapter":"Ch 03. Stacks and Queues"}