{"Id":"873049a1-5b11-430b-bcba-3b0c678d4525","Topic":"Ch 03. Stacks and Queues","Question":"","Solution":"package Q3_04_Queue_via_Stacks;\r\n\r\nimport java.util.LinkedList;\r\nimport java.util.Queue;\r\n\r\nimport CtCILibrary.AssortedMethods;\r\n\r\npublic class Question {\r\n\tpublic static void main(String[] args) {\r\n\t\tMyQueue<Integer> my_queue = new MyQueue<Integer>();\t\r\n\t\t\r\n\t\t// Let's test our code against a \"real\" queue\r\n\t\tQueue<Integer> test_queue = new LinkedList<Integer>();\r\n\t\t\r\n\t\tfor (int i = 0; i < 100; i++) {\r\n\t\t\tint choice = AssortedMethods.randomIntInRange(0, 10);\r\n\t\t\tif (choice <= 5) { // enqueue\r\n\t\t\t\tint element = AssortedMethods.randomIntInRange(1, 10);\r\n\t\t\t\ttest_queue.add(element);\r\n\t\t\t\tmy_queue.add(element);\r\n\t\t\t\tSystem.out.println(\"Enqueued \" + element);\r\n\t\t\t} else if (test_queue.size() > 0) {\r\n\t\t\t\tint top1 = test_queue.remove();\r\n\t\t\t\tint top2 = my_queue.remove();\r\n\t\t\t\tif (top1 != top2) { // Check for error\r\n\t\t\t\t\tSystem.out.println(\"******* FAILURE - DIFFERENT TOPS: \" + top1 + \", \" + top2);\r\n\t\t\t\t} \r\n\t\t\t\tSystem.out.println(\"Dequeued \" + top1);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (test_queue.size() == my_queue.size()) {\r\n\t\t\t\tif (test_queue.size() > 0 && test_queue.peek() != my_queue.peek()) {\r\n\t\t\t\t\tSystem.out.println(\"******* FAILURE - DIFFERENT TOPS: \" + test_queue.peek() + \", \" + my_queue.peek() + \" ******\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tSystem.out.println(\"******* FAILURE - DIFFERENT SIZES ******\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","Chapter":"Ch 03. Stacks and Queues"}