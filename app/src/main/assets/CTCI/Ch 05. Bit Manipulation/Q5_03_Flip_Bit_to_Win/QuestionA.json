{"Id":"c7548a8a-000e-438e-b8a5-6e875559ce14","Topic":"Ch 05. Bit Manipulation","Question":"","Solution":"package Q5_03_Flip_Bit_to_Win;\n\npublic class QuestionA {\n\t\n\tpublic static int SEQUENCE_LENGTH = 32;\n\t\n\tpublic static boolean getBit(int num, int i) {\n\t\treturn ((num & (1 << i)) != 0);\n\t}\t\n\t\n\tpublic static int longestSequence(int n) {\n\t\tint maxSeq = 0;\n\t\t\n\t\tfor (int i = 0; i < SEQUENCE_LENGTH; i++) {\n\t\t\tmaxSeq = Math.max(maxSeq,  longestSequenceOf1s(n, i));\n\t\t}\n\t\t\n\t\treturn maxSeq;\n\t}\n\t\n\tpublic static int longestSequenceOf1s(int n, int indexToIgnore) {\n\t\tint max = 0;\n\t\tint counter = 0;\n\t\tfor (int i = 0; i < SEQUENCE_LENGTH; i++) {\n\t\t\tif (i == indexToIgnore || getBit(n, i)) {\n\t\t\t\tcounter++;\n\t\t\t\tmax = Math.max(counter, max);\n\t\t\t} else {\n\t\t\t\tcounter = 0;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t}\t\n\t\n\tpublic static void main(String[] args) {\n\t\tint original_number = Integer.MAX_VALUE;\n\t\tint new_number = longestSequence(original_number);\n\t\t\t\n\t\tSystem.out.println(Integer.toBinaryString(original_number));\n\t\tSystem.out.println(new_number);\t\t\t\n\t}\n\n}\n","Chapter":"Ch 05. Bit Manipulation"}