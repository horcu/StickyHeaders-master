{"Id":"5982a020-b66c-46d3-a803-46b8845ff173","Topic":"Ch 05. Bit Manipulation","Question":"","Solution":"package Q5_03_Flip_Bit_to_Win;\n\npublic class QuestionD {\n\n\tpublic static int flipBit(int a) {\n\t\t/* If all 1s, this is already the longest sequence. */\n\t\tif (~a == 0) return Integer.BYTES * 8;\n\t\t\n\t\tint currentLength = 0;\n\t\tint previousLength = 0;\n\t\tint maxLength = 1; // We can always have a sequence of at least one 1\n\t\twhile (a != 0) {\n\t\t\tif ((a & 1) == 1) {\n\t\t\t\tcurrentLength++;\n\t\t\t} else if ((a & 1) == 0) {\n\t\t\t\t/* Update to 0 (if next bit is 0) or currentLength (if next bit is 1). */\n\t\t\t\tpreviousLength = (a & 2) == 0 ? 0 : currentLength;\n\t\t\t\tcurrentLength = 0;\n\t\t\t}\n\t\t\tmaxLength = Math.max(previousLength + currentLength + 1, maxLength);\n\t\t\ta >>>= 1;\n\t\t}\n\t\treturn maxLength;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tint[][] cases = {{-1, 32}, {Integer.MAX_VALUE, 32}, {-10, 31}, {0, 1}, \n\t\t\t\t{1, 2}, {15, 5}, {1775, 8}};\n\t\tfor (int[] c : cases) {\n\t\t\tint x = flipBit(c[0]);\n\t\t\tboolean r = (c[1] == x);\n\t\t\tSystem.out.println(c[0] + \": \" + x + \", \" + c[1] + \" \" + r);\n\t\t}\n\n\t}\n\n}\n","Chapter":"Ch 05. Bit Manipulation"}