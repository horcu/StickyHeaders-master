{"Id":"7ac41d69-5f62-4ff2-9ef2-09043deb3440","Topic":"Ch 16. Moderate","Question":"","Solution":"package Q16_04_Tic_Tac_Win;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport CtCILibrary.AssortedMethods;\r\n\r\npublic class QuestionG {\r\n\tpublic static class Check {\r\n\t\tpublic int row, column;\r\n\t\tprivate int rowIncrement, columnIncrement;\r\n\t\tpublic Check(int row, int column, int rowI, int colI) {\r\n\t\t\tthis.row = row;\r\n\t\t\tthis.column = column;\r\n\t\t\tthis.rowIncrement = rowI;\r\n\t\t\tthis.columnIncrement = colI;\r\n\t\t}\r\n\t\t\r\n\t\tpublic void increment() {\r\n\t\t\trow += rowIncrement;\r\n\t\t\tcolumn += columnIncrement;\r\n\t\t}\r\n\t\t\r\n\t\tpublic boolean inBounds(int size) {\r\n\t\t\treturn row >= 0 && column >= 0 &&\r\n\t\t\t\t\trow < size && column < size;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static Piece hasWon(Piece[][] board) {\r\n\t\tif (board.length != board[0].length) return Piece.Empty;\r\n\t\tint size = board.length;\r\n\t\t\r\n\t\t/* Create list of things to check. */\r\n\t\tArrayList<Check> instructions = new ArrayList<Check>();\r\n\t\tfor (int i = 0; i < board.length; i++) {\r\n\t\t\tinstructions.add(new Check(0, i, 1, 0));\r\n\t\t\tinstructions.add(new Check(i, 0, 0, 1));\r\n\t\t}\r\n\t\tinstructions.add(new Check(0, 0, 1, 1));\r\n\t\tinstructions.add(new Check(0, size - 1, 1, -1));\r\n\t\t\r\n\t\t/* Check them. */\r\n\t\tfor (Check instr : instructions) {\r\n\t\t\tPiece winner = hasWon(board, instr);\r\n\t\t\tif (winner != Piece.Empty) {\r\n\t\t\t\treturn winner;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Piece.Empty;\r\n\t}\r\n\t\r\n\tpublic static Piece hasWon(Piece[][] board, Check instr) {\r\n\t\tPiece first = board[instr.row][instr.column];\r\n\t\twhile (instr.inBounds(board.length)) {\r\n\t\t\tif (board[instr.row][instr.column] != first) {\r\n\t\t\t\treturn Piece.Empty;\r\n\t\t\t}\r\n\t\t\tinstr.increment();\r\n\t\t}\r\n\t\treturn first;\r\n\t}\t\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tint N = 3;\r\n\t\tint[][] board_t = AssortedMethods.randomMatrix(N, N, 0, 2);\r\n\t\tPiece[][] board = new Piece[N][N];\r\n\t\tfor (int i = 0; i < N; i++) {\r\n\t\t\tfor (int j = 0; j < N; j++) {\r\n\t\t\t\tint x = board_t[i][j];\r\n\t\t\t\tboard[i][j] = Tester.convertIntToPiece(x);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tPiece p1 = hasWon(board);\r\n\t\t\r\n\t\tSystem.out.println(p1);\r\n\t\tAssortedMethods.printMatrix(board_t);\r\n\t}\r\n\r\n}\r\n","Chapter":"Ch 16. Moderate"}