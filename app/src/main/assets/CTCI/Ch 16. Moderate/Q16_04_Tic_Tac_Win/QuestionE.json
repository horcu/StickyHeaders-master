{"Id":"9e45cf5e-aacb-42eb-999b-1769ae14621a","Topic":"Ch 16. Moderate","Question":"","Solution":"package Q16_04_Tic_Tac_Win;\r\n\r\nimport CtCILibrary.AssortedMethods;\r\n\r\npublic class QuestionE {\r\n\r\n\tpublic static Piece hasWon(Piece[][] board) {\r\n\t\tint size = board.length;\r\n\t\tif (board[0].length != size) return Piece.Empty;\r\n\t\tPiece first;\r\n\t\t\r\n\t\t/* Check rows. */\r\n\t\tfor (int i = 0; i < size; i++) {\r\n\t\t\tfirst = board[i][0];\r\n\t\t\tif (first == Piece.Empty) continue;\r\n\t\t\tfor (int j = 1; j < size; j++) {\r\n\t\t\t\tif (board[i][j] != first) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else if (j == size - 1) {\r\n\t\t\t\t\treturn first;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/* Check columns. */\r\n\t\tfor (int i = 0; i < size; i++) {\r\n\t\t\tfirst = board[0][i];\r\n\t\t\tif (first == Piece.Empty) continue;\r\n\t\t\tfor (int j = 1; j < size; j++) {\r\n\t\t\t\tif (board[j][i] != first) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else if (j == size - 1) {\r\n\t\t\t\t\treturn first;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/* Check diagonals. */\r\n\t\tfirst = board[0][0];\r\n\t\tif (first != Piece.Empty) {\r\n\t\t\tfor (int i = 1; i < size; i++) {\r\n\t\t\t\tif (board[i][i] != first) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else if (i == size - 1) {\r\n\t\t\t\t\treturn first;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfirst = board[0][size - 1];\r\n\t\tif (first != Piece.Empty) {\r\n\t\t\tfor (int i = 1; i < size; i++) {\r\n\t\t\t\tif (board[i][size - i - 1] != first) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else if (i == size - 1) {\r\n\t\t\t\t\treturn first;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn Piece.Empty;\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tint N = 3;\r\n\t\tint[][] board_t = AssortedMethods.randomMatrix(N, N, 0, 2);\r\n\t\tPiece[][] board = new Piece[N][N];\r\n\t\tfor (int i = 0; i < N; i++) {\r\n\t\t\tfor (int j = 0; j < N; j++) {\r\n\t\t\t\tint x = board_t[i][j];\r\n\t\t\t\tboard[i][j] = Tester.convertIntToPiece(x);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tPiece p1 = hasWon(board);\r\n\t\t\r\n\t\tSystem.out.println(p1);\r\n\t\tAssortedMethods.printMatrix(board_t);\r\n\t}\r\n\r\n}\r\n","Chapter":"Ch 16. Moderate"}