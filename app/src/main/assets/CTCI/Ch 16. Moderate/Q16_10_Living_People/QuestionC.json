{"Id":"576d2eb9-987c-4587-8ffb-7528ae99d2ef","Topic":"Ch 16. Moderate","Question":"","Solution":"package Q16_10_Living_People;\n\nimport java.util.Arrays;\nimport java.util.Random;\n\npublic class QuestionC {\n\tpublic static int maxAliveYear(Person[] people, int min, int max) {\n\t\tint[] births = getSortedYears(people, true);\n\t\tint[] deaths = getSortedYears(people, false);\n\n\t\tint birthIndex = 0;\n\t\tint deathIndex = 0;\t\t\n\t\tint currentlyAlive = 0;\n\t\tint maxAlive = 0;\n\t\tint maxAliveYear = min;\n\t\t\n\t\t/* Walk through arrays. */\n\t\twhile (birthIndex < births.length) {\n\t\t\tif (births[birthIndex] <= deaths[deathIndex]) {\n\t\t\t\tcurrentlyAlive++; // include birth \n\t\t\t\tif (currentlyAlive > maxAlive) { \n\t\t\t\t\tmaxAlive = currentlyAlive;\n\t\t\t\t\tmaxAliveYear = births[birthIndex];\n\t\t\t\t}\n\t\t\t\tbirthIndex++; // move birth index\n\t\t\t} else if (births[birthIndex] > deaths[deathIndex]) {\n\t\t\t\tcurrentlyAlive--; // include death\n\t\t\t\tdeathIndex++; // move death index\n\t\t\t}\t\t\t\n\t\t}\n\t\t\n\t\treturn maxAliveYear;\n\t}\n\t\n\t/* Copy birth years or death years (depending on the value of copyBirthYear)\n\t * into integer array, then sort array. */\n\tpublic static int[] getSortedYears(Person[] people, boolean copyBirthYear) {\n\t\tint[] years = new int[people.length];\n\t\tfor (int i = 0; i < people.length; i++) {\n\t\t\tyears[i] = copyBirthYear ? people[i].birth : people[i].death;\n\t\t}\n\t\tArrays.sort(years);\n\t\treturn years;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tint n = 3;\n\t\tint first = 1900;\n\t\tint last = 2000;\n\t\tRandom random = new Random();\n\t\tPerson[] people = new Person[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint birth = first + random.nextInt(last - first);\n\t\t\tint death = birth + random.nextInt(last - birth);\n\t\t\tpeople[i] = new Person(birth, death);\n\t\t\tSystem.out.println(birth + \", \" + death);\n\t\t}\n\t\tint year = maxAliveYear(people, first, last);\n\t\tSystem.out.println(year);\n\t}\n\n}\n","Chapter":"Ch 16. Moderate"}