{"Id":"92f8449b-a5af-4d42-8f32-9c808fc7750d","Topic":"Ch 16. Moderate","Question":"","Solution":"package Q16_11_Diving_Board;\n\nimport java.util.HashSet;\n\npublic class QuestionC {\n\tpublic static int counter = 0;\n\t\n\tpublic static HashSet<Integer> allLengths(int k, int shorter, int longer) {\n\t\tcounter++;\n\t\tHashSet<Integer> lengths = new HashSet<Integer>();\n\t\tfor (int nShorter = 0; nShorter <= k; nShorter++) {\n\t\t\tint nLonger = k - nShorter;\n\t\t\tint length = nShorter * shorter + nLonger * longer;\n\t\t\tlengths.add(length);\n\t\t}\n\t\treturn lengths;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tHashSet<Integer> lengths = allLengths(12, 1, 3);\n\t\tSystem.out.println(lengths.toString());\n\t}\n\n}\n","Chapter":"Ch 16. Moderate"}