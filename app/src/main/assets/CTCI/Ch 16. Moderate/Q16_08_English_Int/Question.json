{"Id":"d916e2cf-7da8-4c42-8a3a-11742dae7b2f","Topic":"Ch 16. Moderate","Question":"","Solution":"package Q16_08_English_Int;\r\n\r\nimport java.util.LinkedList;\r\n\r\nimport CtCILibrary.AssortedMethods;\r\n\r\npublic class Question {\r\n\tpublic static String[] smalls = {\"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\", \"Ten\", \"Eleven\", \"Twelve\", \"Thirteen\", \"Fourteen\", \"Fifteen\", \"Sixteen\", \"Seventeen\", \"Eighteen\", \"Nineteen\"};\r\n\tpublic static String[] tens = {\"\", \"\", \"Twenty\", \"Thirty\", \"Forty\", \"Fifty\", \"Sixty\", \"Seventy\", \"Eighty\", \"Ninety\"};\r\n\tpublic static String[] bigs = {\"\", \"Thousand\", \"Million\", \"Billion\"};\r\n\tpublic static String hundred = \"Hundred\";\r\n\tpublic static String negative = \"Negative\";\r\n\t\r\n\tpublic static String convert(int num) {\r\n\t\tif (num == 0) {\r\n\t\t\treturn smalls[0];\r\n\t\t} else if (num < 0) {\r\n\t\t\treturn negative + \" \" + convert(-1 * num);\r\n\t\t}\r\n\t\t\r\n\t\tLinkedList<String> parts = new LinkedList<String>();\r\n\t\tint chunkCount = 0;\r\n\t\t\r\n\t\twhile (num > 0) {\r\n\t\t\tif (num % 1000 != 0) {\r\n\t\t\t\tString chunk = convertChunk(num % 1000) + \" \" + bigs[chunkCount];\r\n\t\t\t\tparts.addFirst(chunk);\r\n\t\t\t}\r\n\t\t\tnum /= 1000; // shift chunk\r\n\t\t\tchunkCount++;\r\n\t\t}\r\n\t\t\r\n\t\treturn listToString(parts);\r\n\t}\r\n\t\r\n\t/* Convert a linked list of strings to a string, dividing it up with spaces. */\r\n\tpublic static String listToString(LinkedList<String> parts) {\r\n\t\tStringBuilder sb = new StringBuilder();\r\n\t\twhile (parts.size() > 1) {\r\n\t\t\tsb.append(parts.pop());\r\n\t\t\tsb.append(\" \");\r\n\t\t}\r\n\t\tsb.append(parts.pop());\r\n\t\treturn sb.toString();\r\n\t}\r\n\t\r\n\tpublic static String convertChunk(int number) {\r\n\t\tLinkedList<String> parts = new LinkedList<String>();\r\n\t\t\r\n\t\t/* Convert hundreds place */\r\n\t\tif (number >= 100) {\r\n\t\t\tparts.addLast(smalls[number / 100]);\r\n\t\t\tparts.addLast(hundred);\r\n\t\t\tnumber %= 100;\r\n\t\t}\r\n\t\t\r\n\t\t/* Convert tens place */\r\n\t\tif (number >= 10 && number <= 19) {\r\n\t\t\tparts.addLast(smalls[number]);\r\n\t\t} else if (number >= 20) {\r\n\t\t\tparts.addLast(tens[number / 10]);\r\n\t\t\tnumber %= 10;\r\n\t\t}\r\n\t\t\r\n\t\t/* Convert ones place */\r\n\t\tif (number >= 1 && number <= 9) {\r\n\t\t\tparts.addLast(smalls[number]);\r\n\t\t}\r\n\t\t\r\n\t\treturn listToString(parts);\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\t\t\r\n\t\t/* numbers between 100000 and 1000000 */\r\n\t\tfor (int i = 0; i < 8; i++) {\r\n\t\t\tint value = (int) (-1 * Math.pow(10, i));\r\n\t\t\tString s = convert(value);\r\n\t\t\tSystem.out.println(value + \": \" + s);\r\n\t\t}\t\t\t\r\n\t\t\r\n\t\t/* numbers between 0 and 100 */\r\n\t\tfor (int i = 0; i < 10; i++) {\r\n\t\t\tint value = AssortedMethods.randomIntInRange(0, 100);\r\n\t\t\tString s = convert(value);\r\n\t\t\tSystem.out.println(value + \": \" + s);\r\n\t\t}\t\r\n\t\t\r\n\t\t/* numbers between 100 and 1000 */\r\n\t\tfor (int i = 0; i < 10; i++) {\r\n\t\t\tint value = AssortedMethods.randomIntInRange(100, 1000);\r\n\t\t\tString s = convert(value);\r\n\t\t\tSystem.out.println(value + \": \" + s);\r\n\t\t}\r\n\t\t\r\n\t\t/* numbers between 1000 and 100000 */\r\n\t\tfor (int i = 0; i < 10; i++) {\r\n\t\t\tint value = AssortedMethods.randomIntInRange(1000, 100000);\r\n\t\t\tString s = convert(value);\r\n\t\t\tSystem.out.println(value + \": \" + s);\r\n\t\t}\t\t\r\n\t\t\r\n\t\t\r\n\t\t/* numbers between 100000 and 100000000 */\r\n\t\tfor (int i = 0; i < 10; i++) {\r\n\t\t\tint value = AssortedMethods.randomIntInRange(100000, 100000000);\r\n\t\t\tString s = convert(value);\r\n\t\t\tSystem.out.println(value + \": \" + s);\r\n\t\t}\t\r\n\t\t\r\n\t\t/* numbers between 100000000 and 1000000000 */\r\n\t\tfor (int i = 0; i < 10; i++) {\r\n\t\t\tint value = AssortedMethods.randomIntInRange(100000000, 1000000000);\r\n\t\t\tString s = convert(value);\r\n\t\t\tSystem.out.println(value + \": \" + s);\r\n\t\t}\t\t\t\r\n                \r\n\t\t/* numbers between 1000000000 and Integer.MAX_VALUE */\r\n\t\tfor (int i = 0; i < 10; i++) {\r\n\t\t\tint value = AssortedMethods.randomIntInRange(1000000000, Integer.MAX_VALUE);\r\n\t\t\tString s = convert(value);\r\n\t\t\tSystem.out.println(value + \": \" + s);\r\n\t\t}\t\t\t\r\n\t}\r\n}\r\n","Chapter":"Ch 16. Moderate"}