{"Id":"172f80d8-6801-46ed-a5e4-59640b1f54af","Topic":"Ch 06. Math and Logic Puzzles","Question":"","Solution":"package Q6_05_Egg_Drop;\n\npublic class Question {\n\tpublic static int breakingPoint = 89;\n\tpublic static int countDrops = 0;\n\n\n\tpublic static boolean willBreak(int floor) {\n\t\tcountDrops++;\n\t\treturn floor >= breakingPoint;\n\t}\n\n\n\tpublic static int findBreakingPoint(int floors) {\n\t\tint interval = 14;\n\t\tint previousFloor = 0;\n\t\tint egg1 = interval;\n\t\t\n\t\t/* Drop egg1 at decreasing intervals. */\n\t\twhile (!willBreak(egg1) && egg1 <= floors) {\n\t\t\tinterval -= 1;\n\t\t\tpreviousFloor = egg1;\n\t\t\tegg1 += interval;\n\t\t}\n\t\t\n\t\t/* Drop egg2 at 1 unit increments. */\n\t\tint egg2 = previousFloor + 1;\n\t\twhile (egg2 < egg1 && egg2 <= floors && !willBreak(egg2)) {\n\t\t\tegg2 += 1;\n\t\t}\n\t\t\n\t\t/* If it didnâ€™t break, return -1. */\n\t\treturn egg2 > floors ? -1 : egg2;\n\t}\n\n\n\tpublic static void main(String[] args) {\n\t\tint max = 0;\n\t\tfor (int i = 1; i <= 100; i++) {\n\t\t\tcountDrops = 0;\n\t\t\tbreakingPoint = i;\n\t\t\tint bp = findBreakingPoint(100);\n\t\t\t\n\t\t\tif (bp == breakingPoint) {\n\t\t\t\tSystem.out.println(\"SUCCESS: \" + i + \" -> \" + bp + \" -> \" + countDrops);\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"ERROR: \" + i + \" -> \" + bp + \" vs \" + breakingPoint);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmax = countDrops > max ? countDrops : max;\n\t\t}\n\t\tSystem.out.println(max);\n\t}\n}\n\n","Chapter":"Ch 06. Math and Logic Puzzles"}