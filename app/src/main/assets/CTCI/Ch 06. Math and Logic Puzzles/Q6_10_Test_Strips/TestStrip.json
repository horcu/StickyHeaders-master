{"Id":"3f97732f-83dc-4952-b912-353f4d84ec40","Topic":"Ch 06. Math and Logic Puzzles","Question":"","Solution":"package Q6_10_Test_Strips;\n\nimport java.util.ArrayList;\n\npublic class TestStrip {\n\tpublic static int DAYS_FOR_RESULT = 7; \n\tprivate ArrayList<ArrayList<Bottle>> dropsByDay = new ArrayList<ArrayList<Bottle>>();\n\tprivate int id;\n\t\n\tpublic TestStrip(int id) {\n\t\tthis.id = id;\n\t}\n\t\n\tpublic int getId() {\n\t\treturn id;\n\t}\n\t\n\t/* Resize list of days/drops to be large enough. */\n\tprivate void sizeDropsForDay(int day) {\n\t\twhile (dropsByDay.size() <= day) {\n\t\t\tdropsByDay.add(new ArrayList<Bottle>());\n\t\t}\n\t}\n\t\n\t/* Add drop from bottle on specific day. */\n\tpublic void addDropOnDay(int day, Bottle bottle) {\n\t\tsizeDropsForDay(day);\n\t\tArrayList<Bottle> drops = dropsByDay.get(day);\n\t\tdrops.add(bottle);\n\t}\n\t\n\t/* Checks if any of the bottles in the set are poisoned. */\n\tprivate boolean hasPoison(ArrayList<Bottle> bottles) {\n\t\tfor (Bottle b : bottles) {\n\t\t\tif (b.isPoisoned()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\t/* Gets bottles that were used in the test DAYS_FOR_RESULT days ago. */ \n\tpublic ArrayList<Bottle> getLastWeeksBottles(int day) {\n\t\tif (day < DAYS_FOR_RESULT) {\n\t\t\treturn null;\n\t\t}\n\t\treturn dropsByDay.get(day - DAYS_FOR_RESULT);\n\t}\n\t\n\t/* Checks if the test strip has had any poisoned bottles since before DAYS_FOR_RESULT */\n\tpublic boolean isPositiveOnDay(int day) {\n\t\tint testDay = day - DAYS_FOR_RESULT;\n\t\tif (testDay < 0 || testDay >= dropsByDay.size()) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (int d = 0; d <= testDay; d++) {\n\t\t\tArrayList<Bottle> bottles = dropsByDay.get(d);\n\t\t\tif (hasPoison(bottles)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","Chapter":"Ch 06. Math and Logic Puzzles"}