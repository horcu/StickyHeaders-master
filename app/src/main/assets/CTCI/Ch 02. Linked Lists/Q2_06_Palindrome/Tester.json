{"Id":"92ba6a46-0a01-423e-b23b-57e0e1aa18d0","Topic":"Ch 02. Linked Lists","Question":"","Solution":"package Q2_06_Palindrome;\r\n\r\nimport CtCILibrary.LinkedListNode;\r\n\r\npublic class Tester {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tint max = 11;\r\n\t\tfor (int length = 1; length < max; length++) {\r\n\t\t\tLinkedListNode[] nodes = new LinkedListNode[length];\r\n\t\t\tfor (int i = 0; i < length; i++) {\r\n\t\t\t\tnodes[i] = new LinkedListNode(i >= length / 2 ? length - i - 1 : i, null, null);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (int i = 0; i < length; i++) {\r\n\t\t\t\tif (i < length - 1) {\r\n\t\t\t\t\tnodes[i].setNext(nodes[i + 1]);\r\n\t\t\t\t}\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tnodes[i].setPrevious(nodes[i - 1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (int i = -1; i < length; i++) {\r\n\t\t\t\tif (i >= 0) {\r\n\t\t\t\t\tnodes[i].data++; // Ruin palindrome\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tLinkedListNode head = nodes[0];\r\n\t\t\t\tSystem.out.println(head.printForward());\r\n\t\t\t\tboolean resultA = QuestionA.isPalindrome(head);\r\n\t\t\t\tboolean resultB = QuestionB.isPalindrome(head);\r\n\t\t\t\tboolean resultC = QuestionC.isPalindrome(head);\r\n\t\t\t\tSystem.out.println(\"A: \" + resultA);\r\n\t\t\t\tSystem.out.println(\"B: \" + resultB);\r\n\t\t\t\tSystem.out.println(\"C: \" + resultC);\r\n\t\t\t\tif (resultA != resultB || resultB != resultC) {\r\n\t\t\t\t\tSystem.out.println(\"ERROR\");\r\n\t\t\t\t\tlength = max;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (i >= 0) {\r\n\t\t\t\t\tnodes[i].data--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","Chapter":"Ch 02. Linked Lists"}