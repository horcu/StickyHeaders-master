{"Id":"da58963b-e885-4af4-ba42-7649fbe75e0e","Topic":"Ch 15. Threads and Locks","Question":"","Solution":"package IntroductionLocks;\r\n\r\npublic class NoLockATM {\r\n\tprivate int balance = 100;\r\n\t\r\n\tpublic NoLockATM() {\r\n\t}\r\n\t\r\n\tpublic int withdraw(int value) {\r\n\t\tint temp = balance;\r\n\t\ttry {\r\n\t\t\tThread.sleep(300);\r\n\t\t\ttemp = temp - value;\r\n\t\t\tThread.sleep(300);\r\n\t\t\tbalance = temp;\r\n\t\t} catch (InterruptedException e) {\t\t}\r\n\t\treturn temp;\r\n\t}\r\n\t\r\n\tpublic int deposit(int value) {\r\n\t\tint temp = balance;\r\n\t\ttry {\r\n\t\t\tThread.sleep(300);\r\n\t\t\ttemp = temp + value;\r\n\t\t\tThread.sleep(300);\r\n\t\t\tbalance = temp;\r\n\t\t} catch (InterruptedException e) {\t\t}\r\n\t\treturn temp;\r\n\t} \r\n\t\r\n\tpublic int getBalance() {\r\n\t\treturn balance;\r\n\t}\t\r\n}\r\n","Chapter":"Ch 15. Threads and Locks"}