{"Id":"e4754785-126d-4020-b5c8-102e9bd21466","Topic":"Ch 15. Threads and Locks","Question":"","Solution":"package IntroductionLocks;\r\n\r\npublic class Intro {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tNoLockATM noLockATM = new NoLockATM();\r\n\t\tLockedATM lockedATM = new LockedATM();\r\n\t\tMyClass thread1 = new MyClass(noLockATM, lockedATM);\r\n\t\tMyClass thread2 = new MyClass(noLockATM, lockedATM);\r\n\t\t\r\n\t\tthread1.start();\r\n\t\tthread2.start();\r\n\t\t\r\n\t\ttry {\r\n\t\t\tThread.sleep(1000);\r\n\t\t} catch (InterruptedException e) {\r\n\t\t\t// TODO Auto-generated catch block\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tthread1.waitUntilDone();\r\n\t\tthread2.waitUntilDone();\r\n\t\t\r\n\t\tSystem.out.println(\"NoLock ATM: \" + noLockATM.getBalance());\r\n\t\tSystem.out.println(\"Locked ATM: \" + lockedATM.getBalance());\r\n\t\tint v = thread1.delta + thread2.delta + 100;\r\n\t\tSystem.out.println(\"Should Be: \" + v);\r\n\t\tSystem.out.println(\"Program terminating.\");\r\n\t}\r\n\r\n}\r\n","Chapter":"Ch 15. Threads and Locks"}