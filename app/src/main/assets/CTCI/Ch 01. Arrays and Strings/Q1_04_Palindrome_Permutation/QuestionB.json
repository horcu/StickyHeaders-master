{"Id":"6f3da561-4c8f-4fd3-9550-615205a47d23","Topic":"Ch 01. Arrays and Strings","Question":"","Solution":"package Q1_04_Palindrome_Permutation;\n\npublic class QuestionB {\t\n\n\tpublic static boolean isPermutationOfPalindrome(String phrase) {\n\t\tint countOdd = 0;\n\t\tint[] table = new int[Character.getNumericValue('z') - Character.getNumericValue('a') + 1];\n\t\tfor (char c : phrase.toCharArray()) {\n\t\t\tint x = Common.getCharNumber(c);\n\t\t\tif (x != -1) {\n\t\t\t\ttable[x]++;\n\n\t\t\t\tif (table[x] % 2 == 1) {\n\t\t\t\t\tcountOdd++;\n\t\t\t\t} else {\n\t\t\t\t\tcountOdd--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn countOdd <= 1;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tString pali = \"Ratzs live on no evil starz\";\n\t\tSystem.out.println(isPermutationOfPalindrome(pali));\n\t\tString pali2 = \"Zeus was deified, saw Suez\";\n\t\tSystem.out.println(isPermutationOfPalindrome(pali2));\n\t}\n\n\n}\n","Chapter":"Ch 01. Arrays and Strings"}