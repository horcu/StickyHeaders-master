{"Id":"1a81fb66-7f5f-443a-a88d-41c5e5070479","Topic":"Ch 17. Hard","Question":"","Solution":"package Q17_07_Baby_Names;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Graph {\n\tprivate ArrayList<GraphNode> nodes;\n\tprivate HashMap<String, GraphNode> map;\n\t\n\tpublic Graph() {\n\t\tmap = new HashMap<String, GraphNode>();\n\t\tnodes = new ArrayList<GraphNode>();\n\t}\n\t\n\tpublic boolean hasNode(String name) {\n\t\treturn map.containsKey(name);\n\t}\t\n\t\n\tpublic GraphNode createNode(String name, int freq) {\n\t\tif (map.containsKey(name)) { \n\t\t\treturn getNode(name);\n\t\t}\n\t\t\n\t\tGraphNode node = new GraphNode(name, freq);\n\t\tnodes.add(node);\n\t\tmap.put(name, node);\n\t\treturn node;\n\t}\n\t\n\tprivate GraphNode getNode(String name) {\n\t\treturn map.get(name);\n\t}\n\t\n\tpublic ArrayList<GraphNode> getNodes() {\n\t\treturn nodes;\n\t}\n\t\n\tpublic void addEdge(String startName, String endName) {\n\t\tGraphNode start = getNode(startName);\n\t\tGraphNode end = getNode(endName);\n\t\tif (start != null && end != null) {\n\t\t\tstart.addNeighbor(end);\n\t\t\tend.addNeighbor(start);\n\t\t}\n\t}\n}\n","Chapter":"Ch 17. Hard"}