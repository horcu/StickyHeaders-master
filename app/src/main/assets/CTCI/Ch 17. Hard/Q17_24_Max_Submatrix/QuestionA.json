{"Id":"b307cfdd-8ac2-42ca-8d66-310fd45ae520","Topic":"Ch 17. Hard","Question":"","Solution":"package Q17_24_Max_Submatrix;\r\n\r\nimport CtCILibrary.*;\r\n\r\npublic class QuestionA {\r\n\tpublic static SubMatrix getMaxMatrix(int[][] matrix) {\r\n\t\tint rowCount = matrix.length;\r\n\t\tint columnCount = matrix[0].length;\r\n\t\tSubMatrix best = null;\r\n\t\tfor (int row1 = 0; row1 < rowCount; row1++) {\r\n\t\t\tfor (int row2 = row1; row2 < rowCount; row2++) {\r\n\t\t\t\tfor (int col1 = 0; col1 < columnCount; col1++) {\r\n\t\t\t\t\tfor (int col2 = col1; col2 < columnCount; col2++) {\r\n\t\t\t\t\t\tint sum = sum(matrix, row1, col1, row2, col2);\r\n\t\t\t\t\t\tif (best == null || best.getSum() < sum) {\r\n\t\t\t\t\t\t\tbest = new SubMatrix(row1, col1, row2, col2, sum);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn best;\r\n\t}\r\n\t\r\n\tprivate static int sum(int[][] matrix, int row1, int col1, int row2, int col2) {\r\n\t\tint sum = 0;\r\n\t\tfor (int r = row1; r <= row2; r++) {\r\n\t\t\tfor (int c = col1; c <= col2; c++) {\r\n\t\t\t\tsum += matrix[r][c];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn sum;\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tint[][] matrix = AssortedMethods.randomMatrix(10, 10, -5, 5);\r\n\t\tAssortedMethods.printMatrix(matrix);\r\n\t\tSubMatrix sub = getMaxMatrix(matrix);\r\n\t\tSystem.out.println(sub.toString());\r\n\t}\r\n\r\n}\r\n","Chapter":"Ch 17. Hard"}