{"Id":"b35ee9c2-b909-4d84-9b01-db27813e8688","Topic":"Ch 17. Hard","Question":"","Solution":"package Q17_21_Volume_of_Histogram;\n\npublic class QuestionA {\n\n\tpublic static int findIndexOfMax(int[] histogram, int start, int end) {\n\t\tint indexOfMax = start;\n\t\tfor (int i = start + 1; i <= end; i++) {\n\t\t\tif (histogram[i] > histogram[indexOfMax]) {\n\t\t\t\tindexOfMax = i;\n\t\t\t}\n\t\t}\n\t\treturn indexOfMax;\n\t}\n\t\n\tpublic static int borderedVolume(int[] histogram, int start, int end) {\n\t\tif (start >= end) return 0;\n\t\t\n\t\tint min = Math.min(histogram[start], histogram[end]);\n\t\tint sum = 0;\n\t\tfor (int i = start + 1; i < end; i++) {\n\t\t\tsum += min - histogram[i];\n\t\t}\n\t\treturn sum;\n\t}\n\t\n\tpublic static int subgraphVolume(int[] histogram, int start, int end, boolean isLeft) {\n\t\tif (start >= end) return 0;\t\n\t\tint sum = 0;\n\t\tif (isLeft) {\n\t\t\tint max = findIndexOfMax(histogram, start, end - 1);\n\t\t\tsum += borderedVolume(histogram, max, end);\n\t\t\tsum += subgraphVolume(histogram, start, max, isLeft);\n\t\t} else {\n\t\t\tint max = findIndexOfMax(histogram, start + 1, end);\n\t\t\tsum += borderedVolume(histogram, start, max);\n\t\t\tsum += subgraphVolume(histogram, max, end, isLeft);\n\t\t} \n\t\t\n\t\treturn sum;\n\t}\n\t\n\tpublic static int computeHistogramVolume(int[] histogram) {\n\t\tint start = 0;\n\t\tint end = histogram.length - 1;\n\t\t\n\t\tint max = findIndexOfMax(histogram, start, end);\n\t\t\n\t\tint leftVolume =  subgraphVolume(histogram, start, max, true);\n\t\tint rightVolume = subgraphVolume(histogram, max, end, false);\n\t\t\n\t\treturn leftVolume + rightVolume;\t\t\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tint[] histogram = {0, 0, 4, 0, 0, 6, 0, 0, 3, 0, 8, 0, 2, 0, 5, 2, 0, 3, 0, 0};\n\t\tint result = computeHistogramVolume(histogram);\n\t\tSystem.out.println(result);\n\t}\n\n}\n","Chapter":"Ch 17. Hard"}