{"Id":"ef4f3e76-bd2a-4359-a74b-d8bdc09c5506","Topic":"Ch 17. Hard","Question":"","Solution":"package Q17_11_Word_Distance;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\n\r\nimport CtCILibrary.AssortedMethods;\r\nimport CtCILibrary.HashMapList;\r\n\r\npublic class Tester {\r\n\t\r\n\tpublic static String wordAtLocation(String[] words, int loc) {\r\n\t\tif (loc < 0 || loc >= words.length) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn words[loc];\r\n\t}\r\n\t\r\n\t// Method to confirm other result\r\n\tpublic static boolean searchConfirm(String[] words, String word1, String word2, int distance) {\r\n\t\tboolean found_at_distance = false;\r\n\t\tfor (int i = 0; i < words.length; i++) {\r\n\t\t\tif (words[i].equals(word1)) {\r\n\t\t\t\tfor (int j = 1; j < distance; j++) {\r\n\t\t\t\t\tString loc2a = wordAtLocation(words, i - j);\r\n\t\t\t\t\tString loc2b = wordAtLocation(words, i + j);\r\n\t\t\t\t\tif (word2.equals(loc2a) || word2.equals(loc2b)) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tString loc2a = wordAtLocation(words, i - distance);\r\n\t\t\t\tString loc2b = wordAtLocation(words, i + distance);\r\n\t\t\t\tif (word2.equals(loc2a) || word2.equals(loc2b)) {\r\n\t\t\t\t\tfound_at_distance = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn found_at_distance;\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tString[] wordlist = AssortedMethods.getLongTextBlobAsStringList();\r\n\t\tSystem.out.println(AssortedMethods.stringArrayToString(wordlist));\r\n\t\tHashMapList<String, Integer> locations = QuestionB.getWordLocations(wordlist);\r\n\t\t\r\n\t\tString[][] pairs = {{\"Lara\", \"the\"}, {\"river\", \"life\"}, {\"path\", \"their\"}, {\"life\", \"a\"}};\r\n\t\tfor (String[] pair : pairs) {\r\n\t\t\tString word1 = pair[0];\r\n\t\t\tString word2 = pair[1];\r\n\t\t\tLocationPair pairA = QuestionA.findClosest(wordlist, word1, word2);\r\n\t\t\tLocationPair pairB = QuestionB.findClosest(word1, word2, locations);\r\n\t\t\tboolean confirmC = searchConfirm(wordlist, word1, word2, pairA.distance());\r\n\t\t\t\r\n\t\t\tSystem.out.println(\"Distance between <\" + word1 + \"> and <\" + word2 + \">: \" + confirmC);\r\n\t\t\tSystem.out.println(pairA.toString() + \": \" + pairA.distance());\r\n\t\t\tSystem.out.println(pairB.toString() + \": \" + pairB.distance());\r\n\t\t\tSystem.out.println();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","Chapter":"Ch 17. Hard"}