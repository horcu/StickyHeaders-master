{"Id":"87b22693-e45f-4f3a-bf2c-f7fe14787ef3","Topic":"Ch 17. Hard","Question":"","Solution":"package Q17_17_Multi_Search;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport CtCILibrary.HashMapList;\r\n\r\npublic class QuestionC {\r\n\tpublic static Trie createTreeFromStrings(String[] smalls, int maxSize) {\r\n        Trie tree = new Trie();\r\n\t\tfor (String s : smalls) {\r\n\t\t\tif (s.length() <= maxSize) {\r\n\t\t\t\ttree.insertString(s, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn tree;\r\n\t}\r\n\t\r\n\tpublic static ArrayList<String> findStringsAtLoc(TrieNode root, String big, int start) {\r\n\t\tArrayList<String> strings = new ArrayList<String>();\r\n\t\tint index = start;\r\n\t\twhile (index < big.length()) {\r\n\t\t\troot = root.getChild(big.charAt(index));\r\n\t\t\tif (root == null) break;\r\n\t\t\tif (root.terminates()) {\r\n\t\t\t\tstrings.add(big.substring(start, index + 1));\r\n\t\t\t}\r\n\t\t\tindex++;\r\n\t\t\t\r\n\t\t}\r\n\t\treturn strings;\r\n\t}\r\n\t\r\n\tpublic static void insertIntoHashMap(ArrayList<String> strings, HashMapList<String, Integer> map, int index) {\r\n\t\tfor (String s : strings) {\r\n\t\t\tmap.put(s, index);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static HashMapList<String, Integer> searchAll(String big, String[] smalls) {\r\n\t\tHashMapList<String, Integer> lookup = new HashMapList<String, Integer>();\r\n\t\tTrieNode root = createTreeFromStrings(smalls, big.length()).getRoot();\r\n\t\t\r\n\t\tfor (int i = 0; i < big.length(); i++) {\r\n\t\t\tArrayList<String> strings = findStringsAtLoc(root, big, i);\r\n\t\t\tinsertIntoHashMap(strings, lookup, i);\r\n\t\t}\r\n\t\t\r\n\t\treturn lookup;\r\n\t}\t\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tString big = \"mississippi\";\r\n\t\tString[] smalls = {\"is\", \"ppi\", \"hi\", \"sis\", \"i\", \"mississippi\"};\r\n\t\tHashMapList<String, Integer> locations = searchAll(big, smalls);\r\n        System.out.println(locations.toString());\r\n\t}\r\n}","Chapter":"Ch 17. Hard"}