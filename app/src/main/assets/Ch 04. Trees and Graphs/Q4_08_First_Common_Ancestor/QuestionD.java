{"Id":"24a6dae3-1ef1-42e3-9f25-9ad3fb89e8aa","Topic":"QuestionD.java","Question":"","Solution":"package Q4_08_First_Common_Ancestor;\r\n\r\nimport CtCILibrary.TreeNode;\r\n\r\npublic class QuestionD {\r\n\t\r\n\tpublic static TreeNode commonAncestor(TreeNode root, TreeNode p, TreeNode q) {\r\n\t\tif (!covers(root, p) || !covers(root, q)) { // Error check - one node is not in tree\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn ancestorHelper(root, p, q);\r\n\t}\r\n\t\r\n\tpublic static TreeNode ancestorHelper(TreeNode root, TreeNode p, TreeNode q) {\r\n\t\tif (root == null || root == p || root == q) {\r\n\t\t\treturn root;\r\n\t\t}\r\n\t\t\r\n\t\tboolean pIsOnLeft = covers(root.left, p);\r\n\t\tboolean qIsOnLeft = covers(root.left, q);\r\n\t\tif (pIsOnLeft != qIsOnLeft) { // Nodes are on different side\r\n\t\t\treturn root;\r\n\t\t}\r\n\t\tTreeNode childSide = pIsOnLeft ? root.left : root.right;\r\n\t\treturn ancestorHelper(childSide, p, q);\r\n\t}\t\r\n\t\r\n\tpublic static boolean covers(TreeNode root, TreeNode p) { \r\n\t\tif (root == null) return false;\r\n\t\tif (root == p) return true;\r\n\t\treturn covers(root.left, p) || covers(root.right, p); \r\n\t}\r\n\t\t\r\n\t\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tint[] array = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\r\n\t\tTreeNode root = TreeNode.createMinimalBST(array);\r\n\t\tTreeNode n3 = root.find(1);\r\n\t\tTreeNode n7 = root.find(7);\r\n\t\tTreeNode ancestor = commonAncestor(root, n3, n7);\r\n\t\tSystem.out.println(ancestor.data);\r\n\t}\r\n\r\n}\r\n","Chapter":"Q4_08_First_Common_Ancestor"}