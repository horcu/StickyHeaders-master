{"Id":"899040e3-efb7-4db3-80f2-fe15dee63de1","Topic":"Question.java","Question":"","Solution":"package Q4_08_First_Common_Ancestor;\r\n\r\nimport CtCILibrary.TreeNode;\r\n\r\npublic class Question {\r\n\tstatic int TWO_NODES_FOUND = 2;\r\n\tstatic int ONE_NODE_FOUND = 1;\r\n\tstatic int NO_NODES_FOUND = 0;\r\n\t\t\r\n\t// Checks how many 'special' nodes are located under this root\r\n\tpublic static int covers(TreeNode root, TreeNode p, TreeNode q) {\r\n\t\tint ret = NO_NODES_FOUND;\r\n\t\tif (root == null) return ret;\r\n\t\tif (root == p || root == q) ret += 1;\r\n\t\tret += covers(root.left, p, q);\r\n\t\tif(ret == TWO_NODES_FOUND) // Found p and q \r\n\t\t\treturn ret;\r\n\t\treturn ret + covers(root.right, p, q);\r\n\t}\r\n\t\t\r\n\tpublic static TreeNode commonAncestor(TreeNode root, TreeNode p, TreeNode q) {\r\n\t\tif (q == p && (root.left == q || root.right == q)) return root;\r\n\t\tint nodesFromLeft = covers(root.left, p, q); // Check left side\r\n\t\tif (nodesFromLeft == TWO_NODES_FOUND) {\r\n\t\t\tif(root.left == p || root.left == q) return root.left;\r\n\t\t\telse return commonAncestor(root.left, p, q);\r\n\t\t} else if (nodesFromLeft == ONE_NODE_FOUND) {\r\n\t\t\tif (root == p) return p;\r\n\t\t\telse if (root == q) return q;\r\n\t\t}\r\n\r\n\t\tint nodesFromRight = covers(root.right, p, q); // Check right side\r\n\t\tif(nodesFromRight == TWO_NODES_FOUND) {\r\n\t\t\tif(root.right == p || root.right == q) return root.right;\r\n\t\t\telse return commonAncestor(root.right, p, q);\r\n\t\t} else if (nodesFromRight == ONE_NODE_FOUND) {\r\n\t\t\tif (root == p) return p;\r\n\t\t\telse if (root == q) return q;\r\n\t\t}\r\n\t\tif (nodesFromLeft == ONE_NODE_FOUND && \r\n\t\t\tnodesFromRight == ONE_NODE_FOUND) return root;\r\n\t\telse return null;\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tint[] array = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\r\n\t\tTreeNode root = TreeNode.createMinimalBST(array);\r\n\t\tTreeNode n3 = root.find(1);\r\n\t\tTreeNode n7 = root.find(7);\r\n\t\tTreeNode ancestor = commonAncestor(root, n3, n7);\r\n\t\tSystem.out.println(ancestor.data);\r\n\t}\r\n\r\n}\r\n","Chapter":"Q4_08_First_Common_Ancestor"}