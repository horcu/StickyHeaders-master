{"Id":"226a8198-8b8a-4895-9b25-5a29818b2e8d","Topic":"QuestionImproved.java","Question":"","Solution":"package Q4_04_Check_Balanced;\r\nimport CtCILibrary.TreeNode;\r\n\r\npublic class QuestionImproved {\r\n\t\t\r\n\tpublic static int checkHeight(TreeNode root) {\r\n\t\tif (root == null) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tint leftHeight = checkHeight(root.left);\r\n\t\tif (leftHeight == Integer.MIN_VALUE) return Integer.MIN_VALUE; // Propagate error up\r\n\t\t\r\n\t\tint rightHeight = checkHeight(root.right);\r\n\t\tif (rightHeight == Integer.MIN_VALUE) return Integer.MIN_VALUE; // Propagate error up\r\n\t\t\r\n\t\tint heightDiff = leftHeight - rightHeight;\r\n\t\tif (Math.abs(heightDiff) > 1) {\r\n\t\t\treturn Integer.MIN_VALUE; // Found error -> pass it back\r\n\t\t} else {\r\n\t\t\treturn Math.max(leftHeight, rightHeight) + 1;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static boolean isBalanced(TreeNode root) {\r\n\t\treturn checkHeight(root) != Integer.MIN_VALUE;\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Create balanced tree\r\n\t\tint[] array = {0, 1, 2, 3, 5, 6, 7, 8, 9, 10};\r\n\t\tTreeNode root = TreeNode.createMinimalBST(array);\r\n\r\n\t\t\r\n\t\tSystem.out.println(\"Is balanced? \" + isBalanced(root));\r\n\t\t\r\n\t\troot.insertInOrder(4); // Add 4 to make it unbalanced\r\n\r\n\t\tSystem.out.println(\"Is balanced? \" + isBalanced(root));\r\n\t}\r\n\r\n}\r\n","Chapter":"Q4_04_Check_Balanced"}