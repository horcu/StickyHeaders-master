{"Id":"c215b9be-eebe-4012-99d7-4aae09c6fb95","Topic":"Tester.java","Question":"","Solution":"package Q10_11_Peaks_and_Valleys;\n\nimport CtCILibrary.AssortedMethods;\n\npublic class Tester {\n\tpublic static boolean confirmValleyPeak(int[] array) {\n\t\tfor (int i = 1; i < array.length - 1; i++) {\n\t\t\tint prev = array[i - 1];\n\t\t\tint curr = array[i];\n\t\t\tint next = array[i + 1];\n\t\t\tif (prev <= curr && curr >= next) {\n\t\t\t\tcontinue;\n\t\t\t} else if (prev >= curr && curr <= next) {\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tfor (int i = 0; i < 100; i++) {\n\t\t\tint[] originalArray = AssortedMethods.randomArray(10, 0, 100);\n\t\t\tint[] arrayA = originalArray.clone();\n\t\t\tint[] arrayB = originalArray.clone();\n\t\t\tint[] arrayC = originalArray.clone();\n\t\t\t//System.out.println(AssortedMethods.arrayToString(array));\n\t\t\tQuestionA.sortValleyPeak(arrayA);\n\t\t\tQuestionB.sortValleyPeak(arrayB);\n\t\t\tQuestionC.sortValleyPeak(arrayC);\n\t\t\tif (!confirmValleyPeak(arrayA) || !confirmValleyPeak(arrayB) || !confirmValleyPeak(arrayC)) {\n\t\t\t\tSystem.out.println(AssortedMethods.arrayToString(originalArray));\n\t\t\t\tSystem.out.println(AssortedMethods.arrayToString(arrayA));\n\t\t\t\tSystem.out.println(AssortedMethods.arrayToString(arrayB));\n\t\t\t\tSystem.out.println(AssortedMethods.arrayToString(arrayC));\n\t\t\t\tSystem.out.println(confirmValleyPeak(arrayA));\n\t\t\t\tSystem.out.println(confirmValleyPeak(arrayB));\n\t\t\t\tSystem.out.println(confirmValleyPeak(arrayC));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n}\n","Chapter":"Q10_11_Peaks_and_Valleys"}