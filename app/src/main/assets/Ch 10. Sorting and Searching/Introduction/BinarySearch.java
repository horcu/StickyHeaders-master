{"Id":"d07d7fb9-02b7-448b-b825-c12b5536d2db","Topic":"BinarySearch.java","Question":"","Solution":"package Introduction;\r\n\r\npublic class BinarySearch {\r\n\r\n\tpublic static int binarySearch(int[] a, int x) {\r\n\t\tint low = 0;\r\n\t\tint high = a.length - 1;\r\n\t\tint mid;\r\n\t\t\r\n\t\twhile (low <= high) {\r\n\t\t\tmid = (low + high) / 2;\r\n\t\t\tif (a[mid] < x) {\r\n\t\t\t\tlow = mid + 1;\r\n\t\t\t} else if (a[mid] > x) {\r\n\t\t\t\thigh = mid - 1;\r\n\t\t\t} else {\r\n\t\t\t\treturn mid;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\t\r\n\tpublic static int binarySearchRecursive(int[] a, int x, int low, int high) {\r\n\t\tif (low > high) return -1; // Error\r\n\t\t\r\n\t\tint mid = (low + high) / 2;\r\n\t\tif (a[mid] < x) {\r\n\t\t\treturn binarySearchRecursive(a, x, mid + 1, high);\r\n\t\t} else if (a[mid] > x) {\r\n\t\t\treturn binarySearchRecursive(a, x, low, mid - 1);\r\n\t\t} else {\r\n\t\t\treturn mid;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Recursive algorithm to return the closest element\r\n\tpublic static int binarySearchRecursiveClosest(int[] a, int x, int low, int high) {\r\n\t\tif (low > high) { // high is on the left side now\r\n\t\t\tif (high < 0) return low;\r\n\t\t\tif (low >= a.length) return high;\r\n\t\t\tif (x - a[high] < a[low] - x) {\r\n\t\t\t\treturn high;\r\n\t\t\t} \r\n\t\t\treturn low;\r\n\t\t}\r\n\t\t\r\n\t\tint mid = (low + high) / 2;\r\n\t\tif (a[mid] < x) {\r\n\t\t\treturn binarySearchRecursiveClosest(a, x, mid + 1, high);\r\n\t\t} else if (a[mid] > x) {\r\n\t\t\treturn binarySearchRecursiveClosest(a, x, low, mid - 1);\r\n\t\t} else {\r\n\t\t\treturn mid;\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tint[] array = {3, 6, 9, 12, 15, 18};\r\n\t\tfor (int i = 0; i < 20; i++) {\r\n\t\t\tint loc = binarySearch(array, i);\r\n\t\t\tint loc2 = binarySearchRecursive(array, i, 0, array.length - 1);\r\n\t\t\tint loc3 = binarySearchRecursiveClosest(array, i, 0, array.length - 1);\r\n\t\t\tSystem.out.println(i + \": \" + loc + \" \" + loc2 + \" \" + loc3);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","Chapter":"Introduction"}